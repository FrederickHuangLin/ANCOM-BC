dat.zilg, dat.zig, dat.wilcox_un, dat.wilcox_tss)
method.list = list("ANCOM-BC", "ANCOM", "DESeq2", "edgeR", "ZILG", "ZIG", "Wilcoxon", "Wilcoxon + TSS")
dat.fig.list = vector(mode = "list", length = length(eval.dat.list))
for (i in 1:length(eval.dat.list)) {
dat.fig.list[[i]] = data_summary(eval.dat.list[[i]], method.list[[i]])
}
## Merge data
dat.fig=Reduce('rbind', dat.fig.list)
dat.fig$n.samp.grp=factor(dat.fig$n.samp.grp)
levels(dat.fig$n.samp.grp)=c("n = 20/30", "n = 50/50")
dat.fig$method=factor(dat.fig$method)
dat.fig$prop.diff=factor(dat.fig$prop.diff)
dat.fig%>%datatable()%>%formatRound(columns=c("FDR", "FDRSD", "power", "powerSD"), digits=3)
p = ggarrange(p1 + labs(x=NULL), p2 + labs(x=NULL),
labels = c("a", "b"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend="bottom")
p1=ggplot(dat.fig, aes(x=prop.diff, y=FDR, fill=method)) +
geom_hline(yintercept=0.05, linetype="solid", color="black", size = 0.2)+
geom_hline(yintercept=0.05+sqrt(0.05*0.95/100), linetype="dashed", color="black", size = 0.2)+
scale_y_continuous(breaks = c(0.05, seq(0.2, 1, 0.2)), limits = c(0, 0.8))+
coord_flip()+facet_grid(.~n.samp.grp)+
geom_bar(stat="identity", position=position_dodge())+
labs(x="Proportion of Differentially Abundant Taxa", y="", fill=NULL, title="FDR")+
scale_fill_brewer(palette="Dark2")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title=element_text(hjust = 0.5),
strip.background = element_rect(fill="white"),
legend.position = "bottom")+
guides(fill=guide_legend(nrow=2, byrow=TRUE))
p2=ggplot(dat.fig, aes(x=prop.diff, y=power, fill=method)) +
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0, 1))+
coord_flip()+facet_grid(.~n.samp.grp)+
geom_bar(stat="identity", position=position_dodge())+
labs(x="Proportion of Differentially Abundant Taxa", y="", fill=NULL, title="Power")+
scale_fill_brewer(palette="Dark2")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"),
plot.title=element_text(hjust = 0.5),
legend.position = "bottom")+
guides(fill=guide_legend(nrow=2, byrow=TRUE))
p = ggarrange(p1 + labs(x=NULL), p2 + labs(x=NULL),
labels = c("a", "b"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend="bottom")
annotate_figure(p, left = text_grob("Proportion of Differentially Abundant Taxa", rot = 90))
annotate_figure(p, left = text_grob("Proportion of Differentially Abundant Taxa", rot = 90))
ggsave("../figures/Figure 4.pdf", width=12, height=5, units='in')
ggsave("../figures/Figure 4.jpeg", width=12, height=5, units='in', dpi = 300)
rm(list = ls())
library(readxl)
library(tidyverse)
library(nloptr)
library(phyloseq)
library(stringr)
library(ggpubr)
library(magrittr)
library(qwraps2)
library(pander)
panderOptions('table.caption.prefix', NULL)
panderOptions('table.continues', NULL)
panderOptions('table.emphasize.rownames', FALSE)
source("ancom_bc_v1.0.R")
# Read in meta data
meta_data=read_tsv("../data/global_gut/global_gut_metadata.txt")
meta_data=meta_data%>%transmute(Sample.ID=`#SampleID`, age=AGE, sex=SEX, country=COUNTRY)%>%
arrange(Sample.ID)
meta_data=meta_data[complete.cases(meta_data), ]
meta_data$age=as.numeric(meta_data$age)
meta_data$country=recode(meta_data$country, `GAZ:Malawi` = "MA",
`GAZ:United States of America` = "US", `GAZ:Venezuela` = "VEN")
# From Yatsunenko's supplementary files
meta_data2=read_excel("../data/global_gut/NIHMS365354-supplement-3.xls", sheet = 1, skip = 2)
meta_data2=meta_data2[!is.na(meta_data2$`Sample Identifier`), ]
meta_data2=meta_data2%>%
transmute(Sample.ID=`Sample Identifier`, age=`Age (Years)`, gender=Gender,
bmi=`BMI (kg/m2)`, breast.fed=`Breast-fed`, country=Country)%>%
arrange(Sample.ID)
meta_data2$age=signif(as.numeric(meta_data2$age), digits = 2)
meta_data2$bmi=signif(as.numeric(meta_data2$bmi), digits = 2)
meta_data2$breast.fed[which(meta_data2$breast.fed=="NA1")]="NA"
# read in taxonomy
taxonomy=read_tsv("../data/global_gut/global_gut_taxonomy.txt")
taxonomy=taxonomy%>%rowwise()%>%
mutate(genus_name=paste(Phylum, Genus, sep = ";"))
# read in the OTU table and aggregate into phylum level
otu_table=read_tsv("../data/global_gut/global_gut_otu.txt")
otu_table=otu_table[, -532]
otu_table$OTU_ID=taxonomy$Phylum[match(otu_table$OTU_ID, taxonomy$OTU_ID)]
phylum_table=otu_table%>%group_by(OTU_ID)%>%
summarise_all(sum)
non_info_pos=grep("\\p__\\b", phylum_table$OTU_ID) # Exact match
phylum_table=phylum_table[-non_info_pos, ]
phylum_table=as.data.frame(phylum_table)
ma_us_0_2=read_csv("../data/global_gut/ma_us_phylum_age2.csv")
ma_us_18_40=read_csv("../data/global_gut/ma_us_phylum_age18_40.csv")
ma_us_phyla=unique(c(ma_us_0_2$phylum, ma_us_18_40$phylum))
ma_us_0_2=ma_us_0_2%>%transmute(phylum, log.fold.change=`log fold change (MA - US)`,
se=se, ci.lo=ci.lo.adj, ci.up=ci.up.adj,
struc.zero=ifelse(se==0, 1, 0),
q.val, age.group = "Infants",
star=ifelse(q.val<.001, "***",
ifelse(q.val<.01, "**",
ifelse(q.val<.05, "*", ""))))
if(length(setdiff(ma_us_phyla, ma_us_0_2$phylum))>0){
ma_us_0_2.1=data.frame(phylum=setdiff(ma_us_phyla, ma_us_0_2$phylum),
log.fold.change=0, se=0, ci.lo=0, ci.up=0,
struc.zero=1, q.val=1, age.group="Infants", star="")
ma_us_0_2=rbind(ma_us_0_2, ma_us_0_2.1)
}
ma_us_18_40=ma_us_18_40%>%transmute(phylum, log.fold.change=`log fold change (MA - US)`,
se=se, ci.lo=ci.lo.adj, ci.up=ci.up.adj,
struc.zero=ifelse(se==0, 1, 0),
q.val, age.group = "Adults",
star=ifelse(q.val<.001, "***",
ifelse(q.val<.01, "**",
ifelse(q.val<.05, "*", ""))))
if(length(setdiff(ma_us_phyla, ma_us_18_40$phylum))>0){
ma_us_18_40.1=data.frame(phylum=setdiff(ma_us_phyla, ma_us_18_40$phylum),
log.fold.change=0, se=0, ci.lo=0, ci.up=0,
struc.zero=1, q.val=1, age.group="Adults", star="")
ma_us_18_40=rbind(ma_us_18_40, ma_us_18_40.1)
}
dat.fig_ma_us=rbind(ma_us_0_2, ma_us_18_40)
dat.fig_ma_us$age.group=factor(dat.fig_ma_us$age.group,
levels = c("Infants", "Adults"))
dat.fig_ma_us$phylum=sapply(dat.fig_ma_us$phylum, function(x) strsplit(x, "__")[[1]][2])
dat.fig_ma_us$phylum=factor(dat.fig_ma_us$phylum, levels = sort(unique(dat.fig_ma_us$phylum)))
dat.fig_ma_us$struc.zero=factor(dat.fig_ma_us$struc.zero)
ven_us_0_2=read_csv("../data/global_gut/ven_us_phylum_age2.csv")
ven_us_18_40=read_csv("../data/global_gut/ven_us_phylum_age18_40.csv")
ven_us_phyla=unique(c(ven_us_18_40$phylum, ven_us_0_2$phylum))
ven_us_0_2=ven_us_0_2%>%transmute(phylum, log.fold.change=`log fold change (VEN - US)`,
se=se, ci.lo=ci.lo.adj, ci.up=ci.up.adj,
struc.zero=ifelse(se==0, 1, 0),
q.val, age.group = "Infants",
star=ifelse(q.val<.001, "***",
ifelse(q.val<.01, "**",
ifelse(q.val<.05, "*", ""))))
if(length(setdiff(ven_us_phyla, ven_us_0_2$phylum))>0){
ven_us_0_2.1=data.frame(phylum=setdiff(ven_us_phyla, ven_us_0_2$phylum),
log.fold.change=0, se=0, ci.lo=0, ci.up=0,
struc.zero=1, q.val=1, age.group="Infants", star="")
ven_us_0_2=rbind(ven_us_0_2, ven_us_0_2.1)
}
ven_us_18_40=ven_us_18_40%>%transmute(phylum, log.fold.change=`log fold change (VEN - US)`,
se=se, ci.lo=ci.lo.adj, ci.up=ci.up.adj,
struc.zero=ifelse(se==0, 1, 0),
q.val, age.group = "Adults",
star=ifelse(q.val<.001, "***",
ifelse(q.val<.01, "**",
ifelse(q.val<.05, "*", ""))))
if(length(setdiff(ven_us_phyla, ven_us_18_40$phylum))>0){
ven_us_18_40.1=data.frame(phylum=setdiff(ven_us_phyla, ven_us_18_40$phylum),
log.fold.change=0, se=0, ci.lo=0, ci.up=0,
struc.zero=1, q.val=1, age.group="Adults", star="")
ven_us_18_40=rbind(ven_us_18_40, ven_us_18_40.1)
}
dat.fig_ven_us=rbind(ven_us_0_2, ven_us_18_40)
dat.fig_ven_us$age.group=factor(dat.fig_ven_us$age.group,
levels = c("Infants", "Adults"))
dat.fig_ven_us$phylum=sapply(dat.fig_ven_us$phylum, function(x) strsplit(x, "__")[[1]][2])
dat.fig_ven_us$phylum=factor(dat.fig_ven_us$phylum, levels = sort(unique(dat.fig_ven_us$phylum)))
dat.fig_ven_us$struc.zero=factor(dat.fig_ven_us$struc.zero)
ma_ven_0_2=read_csv("../data/global_gut/ma_ven_phylum_age2.csv")
ma_ven_18_40=read_csv("../data/global_gut/ma_ven_phylum_age18_40.csv")
ma_ven_phyla=unique(c(ma_ven_18_40$phylum, ma_ven_0_2$phylum))
ma_ven_0_2=ma_ven_0_2%>%transmute(phylum, log.fold.change=`log fold change (MA - VEN)`,
se=se, ci.lo=ci.lo.adj, ci.up=ci.up.adj,
struc.zero=ifelse(se==0, 1, 0),
q.val, age.group = "Infants",
star=ifelse(q.val<.001, "***",
ifelse(q.val<.01, "**",
ifelse(q.val<.05, "*", ""))))
if(length(setdiff(ma_ven_phyla, ma_ven_0_2$phylum))>0){
ma_ven_0_2.1=data.frame(phylum=setdiff(ma_ven_phyla, ma_ven_0_2$phylum),
log.fold.change=0, se=0, ci.lo=0, ci.up=0,
struc.zero=1, q.val=1, age.group="Infants", star="")
ma_ven_0_2=rbind(ma_ven_0_2, ma_ven_0_2.1)
}
ma_ven_18_40=ma_ven_18_40%>%transmute(phylum, log.fold.change=`log fold change (MA - VEN)`,
se=se, ci.lo=ci.lo.adj, ci.up=ci.up.adj,
struc.zero=ifelse(se==0, 1, 0),
q.val, age.group = "Adults",
star=ifelse(q.val<.001, "***",
ifelse(q.val<.01, "**",
ifelse(q.val<.05, "*", ""))))
if(length(setdiff(ma_ven_phyla, ma_ven_18_40$phylum))>0){
ma_ven_18_40.1=data.frame(phylum=setdiff(ma_ven_phyla, ma_ven_18_40$phylum),
log.fold.change=0, se=0, ci.lo=0, ci.up=0,
struc.zero=1, q.val=1, age.group="Adults", star="")
ma_ven_18_40=rbind(ma_ven_18_40, ma_ven_18_40.1)
}
dat.fig_ma_ven=rbind(ma_ven_0_2, ma_ven_18_40)
dat.fig_ma_ven$age.group=factor(dat.fig_ma_ven$age.group,
levels = c("Infants", "Adults"))
dat.fig_ma_ven$phylum=sapply(dat.fig_ma_ven$phylum, function(x) strsplit(x, "__")[[1]][2])
dat.fig_ma_ven$phylum=factor(dat.fig_ma_ven$phylum, levels = sort(unique(dat.fig_ma_ven$phylum)))
dat.fig_ma_ven$struc.zero=factor(dat.fig_ma_ven$struc.zero)
dat.fig_ma_us2=cbind(dat.fig_ma_us, type="MA - US")
dat.fig_ven_us2=cbind(dat.fig_ven_us, type="VEN - US")
dat.fig_ma_ven2=cbind(dat.fig_ma_ven, type="MA - VEN")
dat.fig_ma_ven2=dat.fig_ma_ven2[-which(dat.fig_ma_ven2$phylum%in%c("Acidobacteria", "Chloroflexi")), ]
dat.fig_ma_ven2$phylum=factor(dat.fig_ma_ven2$phylum)
dat.fig=rbind(dat.fig_ma_us2, dat.fig_ven_us2, dat.fig_ma_ven2)
dat.fig$type=factor(dat.fig$type, levels = c("MA - US", "VEN - US", "MA - VEN"))
p1=ggplot(dat.fig, aes(x=phylum, y=log.fold.change, ymin=ci.lo, ymax=ci.up, group=age.group)) +
geom_bar(aes(fill=age.group), stat="identity", width=0.4, position=position_dodge())+
geom_errorbar(width=0.2, size=0.25, position=position_dodge(width = 0.4))+
geom_abline(slope = 0, intercept = 0, linetype="dashed", alpha=0.5)+
labs(x=NULL, y="Log Fold Change")+coord_flip()+
scale_fill_discrete(name=NULL)+
scale_x_discrete(limits = rev(levels(dat.fig$phylum)))+
facet_grid(.~type, scales = "free_x")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
geom_text(aes(y=log.fold.change+4*sign(log.fold.change), label=star),
vjust=.7, color="black", position=position_dodge(width = .5))
p1 = p1+geom_point(data = dat.fig%>%filter(struc.zero==1), aes(x=phylum, y=log.fold.change),
position=position_dodge(width = 0.4), shape=18)
dat.fig.diff=BFres
# Bacteroidetes - Firmicutes
BFratio_summary = function(eval_data, country, age){
BFdiff=eval_data%>%dplyr::select(phylum, log.fold.change, se)%>%
filter(phylum%in%c("p__Bacteroidetes", "p__Firmicutes"))
diff_mean=BFdiff%>%filter(phylum == "p__Bacteroidetes")%>%.$log.fold.change-
BFdiff%>%filter(phylum == "p__Firmicutes")%>%.$log.fold.change
diff_se=sqrt(BFdiff%>%filter(phylum == "p__Bacteroidetes")%>%.$se%>%.^2+
BFdiff%>%filter(phylum == "p__Firmicutes")%>%.$se%>%.^2)
diff_p=2*pnorm(abs(diff_mean/diff_se), mean=0, sd=1, lower.tail = F)
ci_lo=diff_mean-1.96*diff_se
ci_up=diff_mean+1.96*diff_se
BFdiff=signif(c(diff_mean, diff_se, diff_p, ci_lo, ci_up), 2)
BFdiff=c(country, age, BFdiff)
return(BFdiff)
}
country.list = rep(c("MA - US", "VEN - US", "MA - VEN"), 2)
age.list = rep(c("Infants", "Adults"), each = 3)
eval.data.list = list(ma_us_0_2, ven_us_0_2, ma_ven_0_2, ma_us_18_40, ven_us_18_40, ma_ven_18_40)
BFres.list = vector(mode = "list", length = 6)
for (i in 1:6) {
country = country.list[i]
age = age.list[i]
eval.data = eval.data.list[[i]]
BFres.list[[i]] = BFratio_summary(eval.data, country, age)
}
BFres = as.data.frame(Reduce('rbind', BFres.list), stringsAsFactors = F)
rownames(BFres)=NULL
colnames(BFres)=c("country", "age", "log.fold.change", "se", "p.value", "ci.lo", "ci.up")
BFres$age = factor(BFres$age, levels = c("Infants", "Adults"))
dat.fig.diff=BFres
dat.fig.diff$log.fold.change=as.numeric(dat.fig.diff$log.fold.change)
dat.fig.diff$ci.lo=as.numeric(dat.fig.diff$ci.lo)
dat.fig.diff$ci.up=as.numeric(dat.fig.diff$ci.up)
dat.fig.diff$p.value=as.numeric(dat.fig.diff$p.value)
dat.fig.diff=dat.fig.diff%>%mutate(star=ifelse(p.value<.001, "***",
ifelse(p.value<.01, "**",
ifelse(p.value<.05, "*", ""))))
p2=ggplot(dat.fig.diff, aes(x=country, y=log.fold.change, ymin=ci.lo, ymax=ci.up, group=age)) +
geom_bar(aes(fill=age),
stat="identity", width=0.4, position=position_dodge())+
geom_errorbar(width=.2, size=.25, position=position_dodge(width = .4))+
geom_abline(slope = 0, intercept = 0, linetype="dashed", alpha=0.5)+
labs(x=NULL, y="Log Fold Change (Bacteroidetes - Firmicutes)")+coord_flip()+
scale_fill_discrete(name="")+
scale_x_discrete(limits = c("MA - VEN", "VEN - US", "MA - US"))+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black"))+
geom_text(aes(y=log.fold.change+2.5*sign(log.fold.change), label=star),
vjust=.7, color="black", position=position_dodge(width = .5))
?ggarrange
p = ggarrange(p1, p2,
labels = c("a", "b"),
ncol = 2, nrow = 1, widths = c(2, 1),
common.legend = TRUE, legend="right")
p
p = ggarrange(p1, p2,
labels = c("a", "b"),
ncol = 2, nrow = 1, widths = c(2, 1),
common.legend = TRUE, legend="right")
p
ggsave("../figures/Figure 6.pdf", width=12, height=5, units='in')
ggsave("../figures/Figure 6.jpeg", width=12, height=5, units='in', dpi = 300)
p = ggarrange(p1, p2,
labels = c("a", "b"),
ncol = 2, nrow = 1, widths = c(2, 1),
common.legend = TRUE, legend="bottom")
p
ggsave("../figures/Figure 6.pdf", width=12, height=5, units='in')
ggsave("../figures/Figure 6.jpeg", width=12, height=5, units='in', dpi = 300)
rm(list = ls())
knitr::opts_chunk$set(fig.width = 8.5, fig.height = 5)
library(tidyverse)
library(phyloseq)
library(pander)
panderOptions('table.caption.prefix', NULL)
panderOptions('table.continues', NULL)
panderOptions('table.emphasize.rownames', FALSE)
gg_color_hue=function(n){
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
source("ancom_bc.R")
source("sim_data_poi_gam_two_grp.R")
n.taxa=500; n.samp.grp1=30; n.samp.grp2=30; low.abn=50; med.abn=200; high.abn=10000
prop.diff=0.25; abn.seed=12; obs.seed=13; struc.zero.prop=0; out.zero.prop=0
balanced.micro.load = FALSE; balanced.lib.size = TRUE; samp.frac = "large"
test.dat=abn.tab.gen1(n.taxa, n.samp.grp1, n.samp.grp2, low.abn, med.abn, high.abn, prop.diff,
abn.seed, obs.seed, struc.zero.prop, out.zero.prop,
balanced.micro.load, balanced.lib.size, samp.frac)
obs.abn=test.dat$obs.abn
meta.data=cbind(Sample.ID=paste0("sub", seq(n.samp.grp1+n.samp.grp2)),
group=rep(c(1, 2), c(n.samp.grp1, n.samp.grp2)))
# ANCOM-BC
# Pre-processing
feature.table=obs.abn; sample.var="Sample.ID"; group.var="group"
zero.cut=0.90; lib.cut=1000; neg.lb=FALSE
pre.process=feature_table_pre_process(feature.table, meta.data, sample.var,
group.var, zero.cut, lib.cut, neg.lb)
feature.table=pre.process$feature.table
group.name=pre.process$group.name
group.ind=pre.process$group.ind
struc.zero=pre.process$structure.zeros
# Paras for ANCOM-BC
grp.name=group.name; grp.ind=group.ind; adj.method="bonferroni"
tol.EM=1e-5; max.iterNum=100; perNum = 1000; alpha=0.05
out<-try(ANCOM_BC(feature.table, grp.name, grp.ind, struc.zero, adj.method,
tol.EM, max.iterNum, perNum, alpha), silent = T)
if (inherits(out, "try-error")){
ANCOM.BC=rep(NA, n.samp.grp1+n.samp.grp2)
}else{ANCOM.BC=out$d}
sub.keep=match(names(ANCOM.BC), colnames(obs.abn))
# True value
ACTUAL=log(test.dat$samp.frac); ACTUAL=ACTUAL[sub.keep]
countdata=test.dat$obs.abn
zero.threshold=0.90
taxa.info.ind=apply(countdata, 1, function(x) sum(x==0)/ncol(countdata))
countdata=countdata[which(taxa.info.ind<zero.threshold), ]+1L
# UQ: Upper quartile normalization
groupdata=factor(rep(c(1, 2), c(n.samp.grp1, n.samp.grp2)))
feature_table=countdata+1
dds=edgeR::DGEList(counts = feature_table, group = groupdata)
BiocManager::install("edgeR")
BiocManager::install("metagenomeSeq")
ACTUAL
# UQ: Upper quartile normalization
groupdata=factor(rep(c(1, 2), c(n.samp.grp1, n.samp.grp2)))
feature_table=countdata+1
dds=edgeR::DGEList(counts = feature_table, group = groupdata)
dds=edgeR::calcNormFactors(dds, method="upperquartile")
UQ1=dds$samples$norm.factors*colSums(feature_table, na.rm = T); UQ1=log(UQ1)[sub.keep]
UQ2=dds$samples$norm.factors; UQ2=log(UQ2)[sub.keep]
# TMM: Trimed mean of m-values
dds=edgeR::DGEList(counts = feature_table, group = groupdata)
dds=edgeR::calcNormFactors(dds, method="TMM")
TMM1=dds$samples$norm.factors*colSums(feature_table, na.rm = T); TMM1=log(TMM1)[sub.keep]
TMM2=dds$samples$norm.factors; TMM2=log(TMM2)[sub.keep]
# CSS: Cumulative-sum scaling
meta.data=data.frame(group=rep(c(1, 2), c(n.samp.grp1, n.samp.grp2)))
rownames(meta.data)=paste0("sub", seq(n.samp.grp1+n.samp.grp2))
feature_table=countdata+1
phenotypeData = Biobase::AnnotatedDataFrame(meta.data)
obj = metagenomeSeq::newMRexperiment(countdata, phenoData=phenotypeData, featureData=NULL)
# Calculating normalization factors
p = metagenomeSeq::cumNormStatFast(obj)
obj = metagenomeSeq::cumNorm(obj, p = p)
CSS = metagenomeSeq::normFactors(obj); CSS=log(CSS)[sub.keep]
# MED: Median normalization
coldata=data.frame(group=as.factor(rep(c(1, 2), c(n.samp.grp1, n.samp.grp2))))
rownames(coldata)=paste0("sub", seq(n.samp.grp1+n.samp.grp2))
feature_table=countdata+1
count.table=DESeq2::DESeqDataSetFromMatrix(countData = feature_table,
colData = coldata, design = ~ group)
BiocManager::install("DESeq2")
# MED: Median normalization
coldata=data.frame(group=as.factor(rep(c(1, 2), c(n.samp.grp1, n.samp.grp2))))
rownames(coldata)=paste0("sub", seq(n.samp.grp1+n.samp.grp2))
feature_table=countdata+1
count.table=DESeq2::DESeqDataSetFromMatrix(countData = feature_table,
colData = coldata, design = ~ group)
dds<-try(DESeq2::DESeq(count.table, quiet = T), silent = T)
if (inherits(dds, "try-error")){
MED=rep(NA, n.samp.grp1+n.samp.grp2)[sub.keep]
}else{
MED=DESeq2::sizeFactors(dds)
MED=log(MED)[sub.keep]}
# TSS: Total-sum scaling
TSS=colSums(countdata, na.rm = T); TSS=log(TSS)[sub.keep]
norm.df=data.frame(ACTUAL, ANCOM.BC, UQ1, UQ2, TMM1, TMM2, CSS, MED, TSS,
group=rep(c("Group1", "Group2"), sapply(group.ind, length)))
norm.df=norm.df%>%mutate(D.ANCOM.BC = ACTUAL - ANCOM.BC,
D.UQ1 = ACTUAL - UQ1, D.UQ2 = ACTUAL - UQ2,
D.TMM1 = ACTUAL - TMM1, D.TMM2 = ACTUAL - TMM2,
D.CSS = ACTUAL - CSS, D.MED = ACTUAL - MED,
D.TSS = ACTUAL - TSS,
CD.ANCOM.BC = scale(D.ANCOM.BC, scale = F),
CD.UQ1 = scale(D.UQ1, scale = F), CD.UQ2 = scale(D.UQ2, scale = F),
CD.TMM1 = scale(D.TMM1, scale = F), CD.TMM2 = scale(D.TMM2, scale = F),
CD.CSS = scale(D.CSS, scale = F), CD.MED = scale(D.MED, scale = F),
CD.TSS = scale(D.TSS, scale = F))
temp = norm.df
norm.df = read_csv("../data/sim_norm/norm_large.csv")
View(norm.df)
View(temp)
norm.df=data.frame(ACTUAL, ANCOM.BC, UQ1, UQ2, TMM1, TMM2, CSS, MED, TSS,
group=rep(c("Group1", "Group2"), sapply(group.ind, length)))
norm.df=norm.df%>%mutate(D.ANCOM.BC = ACTUAL - ANCOM.BC,
D.UQ1 = ACTUAL - UQ1, D.UQ2 = ACTUAL - UQ2,
D.TMM1 = ACTUAL - TMM1, D.TMM2 = ACTUAL - TMM2,
D.CSS = ACTUAL - CSS, D.MED = ACTUAL - MED,
D.TSS = ACTUAL - TSS,
CD.ANCOM.BC = scale(D.ANCOM.BC, scale = F),
CD.UQ1 = scale(D.UQ1, scale = F), CD.UQ2 = scale(D.UQ2, scale = F),
CD.TMM1 = scale(D.TMM1, scale = F), CD.TMM2 = scale(D.TMM2, scale = F),
CD.CSS = scale(D.CSS, scale = F), CD.MED = scale(D.MED, scale = F),
CD.TSS = scale(D.TSS, scale = F))
p.df = norm.df%>%gather(key = "method", value = "value", CD.ANCOM.BC:CD.TSS)
p.df$method = factor(p.df$method,
levels = c("CD.ANCOM.BC", "CD.UQ1", "CD.TMM1",
"CD.CSS", "CD.MED", "CD.UQ2", "CD.TMM2", "CD.TSS"))
norm.var = p.df%>%group_by(method)%>%
summarise(method.var = signif(var(value), 2))%>%
mutate(method.abb = c("ANCOM-BC", "ELib-UQ", "ELib-TMM", "CSS", "MED", "UQ", "TMM", "TSS"),
label = paste0(method.abb, " (", method.var, ")"))
p=ggplot(p.df, aes(x=method, y=value, color=method))+
scale_y_continuous(breaks = seq(-0.4, 0.4, 0.2), limits = c(-0.6, 0.9))+
geom_boxplot()+geom_hline(yintercept = 0, linetype="dotted")+
geom_jitter(color="gray28", position=position_jitter(0.2), aes(shape=group))+
scale_color_manual(name=NULL,
label=norm.var$label,
values = gg_color_hue(8))+
scale_shape_manual(name=NULL, values=c(1, 17))+
labs(x="", y="Residual")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.x=element_blank(),
axis.text.x = element_blank(),
legend.position = c(0.36, 0.85),
legend.direction = "horizontal", legend.box = "vertical")+
guides(color = guide_legend(order=1),
shape = guide_legend(order=2))
p
norm.df = read_csv("../data/sim_norm/norm_large.csv")
p.df = norm.df%>%gather(key = "method", value = "value", CD.ANCOM.BC:CD.TSS)
p.df$method = factor(p.df$method,
levels = c("CD.ANCOM.BC", "CD.UQ1", "CD.TMM1",
"CD.CSS", "CD.MED", "CD.UQ2", "CD.TMM2", "CD.TSS"))
norm.var = p.df%>%group_by(method)%>%
summarise(method.var = signif(var(value), 2))%>%
mutate(method.abb = c("ANCOM-BC", "ELib-UQ", "ELib-TMM", "CSS", "MED", "UQ", "TMM", "TSS"),
label = paste0(method.abb, " (", method.var, ")"))
p=ggplot(p.df, aes(x=method, y=value, color=method))+
scale_y_continuous(breaks = seq(-0.4, 0.4, 0.2), limits = c(-0.6, 0.9))+
geom_boxplot()+geom_hline(yintercept = 0, linetype="dotted")+
geom_jitter(color="gray28", position=position_jitter(0.2), aes(shape=group))+
scale_color_manual(name=NULL,
label=norm.var$label,
values = gg_color_hue(8))+
scale_shape_manual(name=NULL, values=c(1, 17))+
labs(x="", y="Residual")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.x=element_blank(),
axis.text.x = element_blank(),
legend.position = c(0.36, 0.85),
legend.direction = "horizontal", legend.box = "vertical")+
guides(color = guide_legend(order=1),
shape = guide_legend(order=2))
p
source("ancom.R")
rm(list = ls())
library(readr)
library(microbiome)
source("ancom_bc_v1.0.R")
data(dietswap)
pseq = dietswap
n_taxa = ntaxa(pseq)
n_samp = nsamples(pseq)
# Metadata
meta_data = meta(pseq)
# Taxonomy table
taxonomy = tax_table(pseq)
# Absolute abundances
otu_absolute = abundances(pseq)
View(otu_absolute)
# Pre-processing
feature.table = otu_absolute; sample.var = "sample"; group.var = "nationality";
zero.cut = 0.90; lib.cut = 1000; neg.lb = TRUE
pre.process = feature_table_pre_process(feature.table, meta_data, sample.var,
group.var, zero.cut, lib.cut, neg.lb)
feature.table = pre.process$feature.table
group.name = pre.process$group.name
group.ind = pre.process$group.ind
struc.zero = pre.process$structure.zeros
# Paras for ANCOM-BC
grp.name = group.name; grp.ind = group.ind; adj.method = "bonferroni"
tol.EM = 1e-5; max.iterNum = 100; perNum = 1000; alpha = 0.05
out = ANCOM_BC(feature.table, grp.name, grp.ind, struc.zero,
adj.method, tol.EM, max.iterNum, perNum, alpha)
res = cbind(taxon = rownames(out$feature.table), out$res)
View(feature.table)
?log
