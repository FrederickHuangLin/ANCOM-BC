meta.data$country=as.character(meta.data$country)
# Subset OTU table
obs.abn=genus_table
rownames(obs.abn)=obs.abn$OTU_ID
obs.abn=obs.abn[, -1]
obs.abn=obs.abn[, meta.data$Sample.ID]
# Recode sample ID
meta.data$Sample.ID=seq(nrow(meta.data))
colnames(obs.abn)=seq(nrow(meta.data))
feature.table=obs.abn; sample.var="Sample.ID"; group.var="country";
zero.cut=0.90; lib.cut=1000; neg.lb=TRUE
pre.process=feature_table_pre_process(feature.table, meta.data, sample.var,
group.var, zero.cut, lib.cut, neg.lb)
feature.table=pre.process$feature.table
library.size=pre.process$library.size
group.name=pre.process$group.name
group.ind=pre.process$group.ind
struc.zero=pre.process$structure.zeros
# Paras for ANCOM-BC
grp.name=group.name; grp.ind=group.ind; adj.method="BH"
tol.EM=1e-5; max.iterNum=100; perNum=1000; alpha=0.05
# Run ANCOM-BC
out=ANCOM_BC(feature.table, grp.name, grp.ind, struc.zero, adj.method,
tol.EM, max.iterNum, perNum, alpha)
ancom.bc=out$d
y.ancom.bc=t(t(log(out$feature.table+1))-ancom.bc)
y.ancom.bc=y.ancom.bc+abs(min(y.ancom.bc, na.rm = T))
dist.ancom.bc=vegdist(t(y.ancom.bc), method="bray", na.rm = T)
fit.ancom.bc=isoMDS(dist.ancom.bc, k=2)
mds.xy.ancom.bc=data.frame(method = "ANCOM-BC", fit.ancom.bc$points)
mds.xy.ancom.bc$country=meta.data$country[match(colnames(out$feature.table), meta.data$Sample.ID)]
countdata=obs.abn
zero.threshold=0.90
taxa.info.ind=apply(countdata, 1, function(x) sum(x==0)/ncol(countdata))
countdata=countdata[which(taxa.info.ind<zero.threshold), ]+1L
groupdata=meta.data$country
dds=edgeR::DGEList(counts = countdata, group = groupdata)
dds=edgeR::calcNormFactors(dds, method="upperquartile")
UQ1=dds$samples$norm.factors*colSums(countdata, na.rm = T)
y.uq1=t(t(log(countdata))-log(UQ1))
y.uq1=y.uq1+abs(min(y.uq1))
dist.uq1=vegdist(t(y.uq1), method="bray", na.rm = T)
fit.uq1=isoMDS(dist.uq1, k=2)
mds.xy.uq1=data.frame(method = "ELib-UQ", fit.uq1$points, country = meta.data$country)
dds=edgeR::DGEList(counts = countdata, group = groupdata)
dds=edgeR::calcNormFactors(dds, method="TMM")
TMM1=dds$samples$norm.factors*colSums(countdata, na.rm = T)
y.tmm1=t(t(log(countdata))-log(TMM1))
y.tmm1=y.tmm1+abs(min(y.tmm1))
dist.tmm1=vegdist(t(y.tmm1), method="bray", na.rm = T)
fit.tmm1=isoMDS(dist.tmm1, k=2)
mds.xy.tmm1=data.frame(method = "ELib-TMM", fit.tmm1$points, country = meta.data$country)
rownames(meta.data)=meta.data$Sample.ID
phenotypeData = Biobase::AnnotatedDataFrame(meta.data)
obj = metagenomeSeq::newMRexperiment(countdata, phenoData=phenotypeData, featureData=NULL)
# Calculating normalization factors
obj = metagenomeSeq::cumNorm(obj)
CSS = metagenomeSeq::normFactors(obj)
y.css=t(t(log(countdata))-log(CSS))
y.css=y.css+abs(min(y.css))
dist.css=vegdist(t(y.css), method="bray", na.rm = T)
fit.css=isoMDS(dist.css, k=2)
mds.xy.css=data.frame(method = "CSS", fit.css$points, country = meta.data$country)
coldata=meta.data
count.table=DESeq2::DESeqDataSetFromMatrix(countData = countdata,
colData = coldata, design = ~ country)
dds=DESeq2::DESeq(count.table, quiet = TRUE)
MED=DESeq2::sizeFactors(dds)
y.med=t(t(log(countdata))-log(MED))
y.med=y.med+abs(min(y.med))
dist.med=vegdist(t(y.med), method="bray", na.rm = T)
fit.med=isoMDS(dist.med, k=2)
mds.xy.med=data.frame(method = "MED", fit.med$points, country = meta.data$country)
groupdata=meta.data$country
dds=edgeR::DGEList(counts = countdata, group = groupdata)
dds=edgeR::calcNormFactors(dds, method="upperquartile")
UQ2=dds$samples$norm.factors
y.uq2=t(t(log(countdata))-log(UQ2))
y.uq2=y.uq2+abs(min(y.uq2))
dist.uq2=vegdist(t(y.uq2), method="bray", na.rm = T)
fit.uq2=isoMDS(dist.uq2, k=2)
mds.xy.uq2=data.frame(method = "UQ", fit.uq2$points, country = meta.data$country)
dds=edgeR::DGEList(counts = countdata, group = groupdata)
dds=edgeR::calcNormFactors(dds, method="TMM")
TMM2=dds$samples$norm.factors
y.tmm2=t(t(log(countdata))-log(TMM2))
y.tmm2=y.tmm2+abs(min(y.tmm2))
dist.tmm2=vegdist(t(y.tmm2), method="bray", na.rm = T)
fit.tmm2=isoMDS(dist.tmm2, k=2)
mds.xy.tmm2=data.frame(method = "TMM", fit.tmm2$points, country = meta.data$country)
TSS=colSums(countdata, na.rm = T)
y.tss=t(t(log(countdata))-log(TSS))
y.tss=y.tss+abs(min(y.tss))
dist.tss=vegdist(t(y.tss), method="bray", na.rm = T)
fit.tss=isoMDS(dist.tss, k=2)
mds.xy.tss=data.frame(method = "TSS", fit.tss$points, country = meta.data$country)
ss_compute=function(x){
x=as.matrix(x)
ss=sum(t(t(x)-colMeans(x, na.rm = T))^2, na.rm = T)
return(ss)
}
mds.xy.ancom.bc=mds.xy.ancom.bc%>%mutate(scale_x1=scale(X1), scale_x2=scale(X2))
mds.xy.uq1=mds.xy.uq1%>%mutate(scale_x1=scale(X1), scale_x2=scale(X2))
mds.xy.tmm1=mds.xy.tmm1%>%mutate(scale_x1=scale(X1), scale_x2=scale(X2))
mds.xy.css=mds.xy.css%>%mutate(scale_x1=scale(X1), scale_x2=scale(X2))
mds.xy.med=mds.xy.med%>%mutate(scale_x1=scale(X1), scale_x2=scale(X2))
mds.xy.uq2=mds.xy.uq2%>%mutate(scale_x1=scale(X1), scale_x2=scale(X2))
mds.xy.tmm2=mds.xy.tmm2%>%mutate(scale_x1=scale(X1), scale_x2=scale(X2))
mds.xy.tss=mds.xy.tss%>%mutate(scale_x1=scale(X1), scale_x2=scale(X2))
mds.list=list(mds.xy.ancom.bc, mds.xy.uq1, mds.xy.tmm1, mds.xy.css,
mds.xy.med, mds.xy.uq2, mds.xy.tmm2, mds.xy.tss)
bss.df=data.frame(method=c("ANCOM-BC", "ELib-UQ", "ELib-TMM", "CSS", "MED", "UQ", "TMM", "TSS"), bss = NA)
for (i in 1:length(mds.list)) {
method=mds.list[[i]]
tss=ss_compute(method%>%dplyr::select(scale_x1, scale_x2))
wss=ss_compute(method%>%filter(country=="MA")%>%dplyr::select(scale_x1, scale_x2))+
ss_compute(method%>%filter(country=="VEN")%>%dplyr::select(scale_x1, scale_x2))
bss=tss-wss
bss.df[i, "bss"]=bss
}
txt.df = data.frame(X1=0.2, X2=0.25, bss.df)
txt.df$bss = paste0("BSS = ", round(txt.df$bss, 0))
p.df = rbind(mds.xy.ancom.bc, mds.xy.uq1, mds.xy.tmm1, mds.xy.css,
mds.xy.med, mds.xy.uq2, mds.xy.tmm2, mds.xy.tss)
write.csv(txt.df, "../data/global_gut/bss.csv", row.names = FALSE)
write.csv(p.df, "../data/global_gut/nmds.csv", row.names = FALSE)
txt.df = read_csv("../data/global_gut/bss.csv")
p.df = read_csv("../data/global_gut/nmds.csv")
txt.df$method = factor(txt.df$method, levels = c("ANCOM-BC", "ELib-UQ", "ELib-TMM", "CSS",
"MED", "UQ", "TMM", "TSS"))
p.df$method = factor(p.df$method, levels = c("ANCOM-BC", "ELib-UQ", "ELib-TMM", "CSS",
"MED", "UQ", "TMM", "TSS"))
p=ggplot(p.df, aes(X1, X2, color = country)) + geom_point(size = 0.3) +
facet_wrap(.~method, nrow = 2)+scale_y_continuous(limits = c(-0.3, 0.3))+
labs(x="First NMDS coordinate", y="Second NMDS coordinate")+
scale_color_discrete(name="", breaks=c("MA", "VEN"), labels = c("Malawi", "Venezuela"))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
strip.background = element_rect(fill="white"))+
guides(color = guide_legend(override.aes = list(size=3)))+
geom_text(data = txt.df, mapping = aes(x = X1, y = X2, label = bss, color = NULL,group= NULL))
p
rm(list = ls())
knitr::opts_chunk$set(fig.width = 6.25, fig.height = 5)
library(tidyverse)
library(phyloseq)
library(ggpubr)
library(RColorBrewer)
library(DT)
library(pander)
panderOptions('table.caption.prefix', NULL)
panderOptions('table.continues', NULL)
panderOptions('table.emphasize.rownames', FALSE)
source("sim_data_poi_gam_two_grp.R")
source("ancom_bc_v1.0.R")
source("ancom_simple.R")
## Read in original data
dat.ancom_bc=read_csv("../data/sim_poi_gam/large/fdr_power_ancom_bc_large.csv")
dat.ancom=read_csv("../data/sim_poi_gam/large/fdr_power_ancom_large.csv")
dat.deseq2=read_csv("../data/sim_poi_gam/large/fdr_power_deseq2_large.csv")
dat.edger=read_csv("../data/sim_poi_gam/large/fdr_power_edger_large.csv")
dat.zilg=read_csv("../data/sim_poi_gam/large/fdr_power_zilg_large.csv")
dat.zig=read_csv("../data/sim_poi_gam/large/fdr_power_zig_large.csv")
dat.wilcox_un=read_csv("../data/sim_poi_gam/large/fdr_power_wilcox_un_large.csv")
dat.wilcox_tss=read_csv("../data/sim_poi_gam/large/fdr_power_wilcox_tss_large.csv")
## Reshaping data
simpattern=distinct(simparams, n.taxa, n.samp.grp1, n.samp.grp2, prop.diff)
# The number of taxa, library size, and sample size
n.taxa = 1000; balanced.micro.load = FALSE; balanced.lib.size = TRUE
samp.frac = "small"; n.samp = c("20_30", "50_50")
# The proportion of differentially abundant taxa
prop.diff=c(0.05, 0.15, 0.25)
# Set seeds
iterNum=100
abn.seed=seq(iterNum)
# Define the simulation parameters
simparams=expand.grid(n.taxa, n.samp, prop.diff, abn.seed,
balanced.micro.load, balanced.lib.size, samp.frac)
colnames(simparams)=c("n.taxa", "n.samp", "prop.diff", "abn.seed",
"balanced.micro.load", "balanced.lib.size", "samp.frac")
simparams=simparams%>%mutate(obs.seed=abn.seed+1)
simparams=simparams%>%separate(col = n.samp, into = c("n.samp.grp1", "n.samp.grp2"), sep = "_")
simparams=simparams%>%arrange(n.taxa, n.samp.grp1, prop.diff, abn.seed, obs.seed)
simparams.list=apply(simparams, 1, paste0, collapse="_")
simparamslabels=c("n.taxa", "n.samp.grp1", "n.samp.grp2","prop.diff", "abn.seed",
"balanced.micro.load", "balanced.lib.size", "samp.frac", "obs.seed")
## Read in original data
dat.ancom_bc=read_csv("../data/sim_poi_gam/large/fdr_power_ancom_bc_large.csv")
dat.ancom=read_csv("../data/sim_poi_gam/large/fdr_power_ancom_large.csv")
dat.deseq2=read_csv("../data/sim_poi_gam/large/fdr_power_deseq2_large.csv")
dat.edger=read_csv("../data/sim_poi_gam/large/fdr_power_edger_large.csv")
dat.zilg=read_csv("../data/sim_poi_gam/large/fdr_power_zilg_large.csv")
dat.zig=read_csv("../data/sim_poi_gam/large/fdr_power_zig_large.csv")
dat.wilcox_un=read_csv("../data/sim_poi_gam/large/fdr_power_wilcox_un_large.csv")
dat.wilcox_tss=read_csv("../data/sim_poi_gam/large/fdr_power_wilcox_tss_large.csv")
## Reshaping data
simpattern=distinct(simparams, n.taxa, n.samp.grp1, n.samp.grp2, prop.diff)
data_summary = function(eval_data, method){
FDR=tapply(as.numeric(eval_data[1, ]),
rep(seq(nrow(simpattern)), each=iterNum), function(x) mean(x, na.rm = T))
FDRSD=tapply(as.numeric(eval_data[1, ]),
rep(seq(nrow(simpattern)), each=iterNum), function(x) sd(x, na.rm = T))
power=tapply(as.numeric(eval_data[2, ]),
rep(seq(nrow(simpattern)), each=iterNum), function(x) mean(x, na.rm = T))
powerSD=tapply(as.numeric(eval_data[2, ]),
rep(seq(nrow(simpattern)), each=iterNum), function(x) sd(x, na.rm = T))
data_sum = data.frame(FDR, FDRSD, power, powerSD, simpattern, method)
data_sum = data_sum%>%unite(n.samp.grp, n.samp.grp1, n.samp.grp2, sep = ", ")
return(data_sum)
}
eval.dat.list = list(dat.ancom_bc, dat.ancom, dat.deseq2, dat.edger,
dat.zilg, dat.zig, dat.wilcox_un, dat.wilcox_tss)
method.list = list("ANCOM-BC", "ANCOM", "DESeq2", "edgeR", "ZILG", "ZIG", "Wilcoxon", "Wilcoxon + TSS")
dat.fig.list = vector(mode = "list", length = length(eval.dat.list))
for (i in 1:length(eval.dat.list)) {
dat.fig.list[[i]] = data_summary(eval.dat.list[[i]], method.list[[i]])
}
## Merge data
dat.fig=Reduce('rbind', dat.fig.list)
dat.fig$n.samp.grp=factor(dat.fig$n.samp.grp)
levels(dat.fig$n.samp.grp)=c("n = 20/30", "n = 50/50")
dat.fig$method=factor(dat.fig$method)
dat.fig$prop.diff=factor(dat.fig$prop.diff)
dat.fig%>%datatable()%>%formatRound(columns=c("FDR", "FDRSD", "power", "powerSD"), digits=3)
p = ggarrange(p1 + labs(x=NULL), p2 + labs(x=NULL),
labels = c("a", "b"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend="bottom")
p1=ggplot(dat.fig, aes(x=prop.diff, y=FDR, fill=method)) +
geom_hline(yintercept=0.05, linetype="solid", color="black", size = 0.2)+
geom_hline(yintercept=0.05+sqrt(0.05*0.95/100), linetype="dashed", color="black", size = 0.2)+
scale_y_continuous(breaks = c(0.05, seq(0.2, 1, 0.2)), limits = c(0, 0.8))+
coord_flip()+facet_grid(.~n.samp.grp)+
geom_bar(stat="identity", position=position_dodge())+
labs(x="Proportion of Differentially Abundant Taxa", y="", fill=NULL, title="FDR")+
scale_fill_brewer(palette="Dark2")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title=element_text(hjust = 0.5),
strip.background = element_rect(fill="white"),
legend.position = "bottom")+
guides(fill=guide_legend(nrow=2, byrow=TRUE))
p2=ggplot(dat.fig, aes(x=prop.diff, y=power, fill=method)) +
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0, 1))+
coord_flip()+facet_grid(.~n.samp.grp)+
geom_bar(stat="identity", position=position_dodge())+
labs(x="Proportion of Differentially Abundant Taxa", y="", fill=NULL, title="Power")+
scale_fill_brewer(palette="Dark2")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"),
plot.title=element_text(hjust = 0.5),
legend.position = "bottom")+
guides(fill=guide_legend(nrow=2, byrow=TRUE))
p = ggarrange(p1 + labs(x=NULL), p2 + labs(x=NULL),
labels = c("a", "b"),
ncol = 2, nrow = 1,
common.legend = TRUE, legend="bottom")
annotate_figure(p, left = text_grob("Proportion of Differentially Abundant Taxa", rot = 90))
annotate_figure(p, left = text_grob("Proportion of Differentially Abundant Taxa", rot = 90))
ggsave("../figures/Figure 4.pdf", width=12, height=5, units='in')
ggsave("../figures/Figure 4.jpeg", width=12, height=5, units='in', dpi = 300)
rm(list = ls())
library(readxl)
library(tidyverse)
library(nloptr)
library(phyloseq)
library(stringr)
library(ggpubr)
library(magrittr)
library(qwraps2)
library(pander)
panderOptions('table.caption.prefix', NULL)
panderOptions('table.continues', NULL)
panderOptions('table.emphasize.rownames', FALSE)
source("ancom_bc_v1.0.R")
# Read in meta data
meta_data=read_tsv("../data/global_gut/global_gut_metadata.txt")
meta_data=meta_data%>%transmute(Sample.ID=`#SampleID`, age=AGE, sex=SEX, country=COUNTRY)%>%
arrange(Sample.ID)
meta_data=meta_data[complete.cases(meta_data), ]
meta_data$age=as.numeric(meta_data$age)
meta_data$country=recode(meta_data$country, `GAZ:Malawi` = "MA",
`GAZ:United States of America` = "US", `GAZ:Venezuela` = "VEN")
# From Yatsunenko's supplementary files
meta_data2=read_excel("../data/global_gut/NIHMS365354-supplement-3.xls", sheet = 1, skip = 2)
meta_data2=meta_data2[!is.na(meta_data2$`Sample Identifier`), ]
meta_data2=meta_data2%>%
transmute(Sample.ID=`Sample Identifier`, age=`Age (Years)`, gender=Gender,
bmi=`BMI (kg/m2)`, breast.fed=`Breast-fed`, country=Country)%>%
arrange(Sample.ID)
meta_data2$age=signif(as.numeric(meta_data2$age), digits = 2)
meta_data2$bmi=signif(as.numeric(meta_data2$bmi), digits = 2)
meta_data2$breast.fed[which(meta_data2$breast.fed=="NA1")]="NA"
# read in taxonomy
taxonomy=read_tsv("../data/global_gut/global_gut_taxonomy.txt")
taxonomy=taxonomy%>%rowwise()%>%
mutate(genus_name=paste(Phylum, Genus, sep = ";"))
# read in the OTU table and aggregate into phylum level
otu_table=read_tsv("../data/global_gut/global_gut_otu.txt")
otu_table=otu_table[, -532]
otu_table$OTU_ID=taxonomy$Phylum[match(otu_table$OTU_ID, taxonomy$OTU_ID)]
phylum_table=otu_table%>%group_by(OTU_ID)%>%
summarise_all(sum)
non_info_pos=grep("\\p__\\b", phylum_table$OTU_ID) # Exact match
phylum_table=phylum_table[-non_info_pos, ]
phylum_table=as.data.frame(phylum_table)
ma_us_0_2=read_csv("../data/global_gut/ma_us_phylum_age2.csv")
ma_us_18_40=read_csv("../data/global_gut/ma_us_phylum_age18_40.csv")
ma_us_phyla=unique(c(ma_us_0_2$phylum, ma_us_18_40$phylum))
ma_us_0_2=ma_us_0_2%>%transmute(phylum, log.fold.change=`log fold change (MA - US)`,
se=se, ci.lo=ci.lo.adj, ci.up=ci.up.adj,
struc.zero=ifelse(se==0, 1, 0),
q.val, age.group = "Infants",
star=ifelse(q.val<.001, "***",
ifelse(q.val<.01, "**",
ifelse(q.val<.05, "*", ""))))
if(length(setdiff(ma_us_phyla, ma_us_0_2$phylum))>0){
ma_us_0_2.1=data.frame(phylum=setdiff(ma_us_phyla, ma_us_0_2$phylum),
log.fold.change=0, se=0, ci.lo=0, ci.up=0,
struc.zero=1, q.val=1, age.group="Infants", star="")
ma_us_0_2=rbind(ma_us_0_2, ma_us_0_2.1)
}
ma_us_18_40=ma_us_18_40%>%transmute(phylum, log.fold.change=`log fold change (MA - US)`,
se=se, ci.lo=ci.lo.adj, ci.up=ci.up.adj,
struc.zero=ifelse(se==0, 1, 0),
q.val, age.group = "Adults",
star=ifelse(q.val<.001, "***",
ifelse(q.val<.01, "**",
ifelse(q.val<.05, "*", ""))))
if(length(setdiff(ma_us_phyla, ma_us_18_40$phylum))>0){
ma_us_18_40.1=data.frame(phylum=setdiff(ma_us_phyla, ma_us_18_40$phylum),
log.fold.change=0, se=0, ci.lo=0, ci.up=0,
struc.zero=1, q.val=1, age.group="Adults", star="")
ma_us_18_40=rbind(ma_us_18_40, ma_us_18_40.1)
}
dat.fig_ma_us=rbind(ma_us_0_2, ma_us_18_40)
dat.fig_ma_us$age.group=factor(dat.fig_ma_us$age.group,
levels = c("Infants", "Adults"))
dat.fig_ma_us$phylum=sapply(dat.fig_ma_us$phylum, function(x) strsplit(x, "__")[[1]][2])
dat.fig_ma_us$phylum=factor(dat.fig_ma_us$phylum, levels = sort(unique(dat.fig_ma_us$phylum)))
dat.fig_ma_us$struc.zero=factor(dat.fig_ma_us$struc.zero)
ven_us_0_2=read_csv("../data/global_gut/ven_us_phylum_age2.csv")
ven_us_18_40=read_csv("../data/global_gut/ven_us_phylum_age18_40.csv")
ven_us_phyla=unique(c(ven_us_18_40$phylum, ven_us_0_2$phylum))
ven_us_0_2=ven_us_0_2%>%transmute(phylum, log.fold.change=`log fold change (VEN - US)`,
se=se, ci.lo=ci.lo.adj, ci.up=ci.up.adj,
struc.zero=ifelse(se==0, 1, 0),
q.val, age.group = "Infants",
star=ifelse(q.val<.001, "***",
ifelse(q.val<.01, "**",
ifelse(q.val<.05, "*", ""))))
if(length(setdiff(ven_us_phyla, ven_us_0_2$phylum))>0){
ven_us_0_2.1=data.frame(phylum=setdiff(ven_us_phyla, ven_us_0_2$phylum),
log.fold.change=0, se=0, ci.lo=0, ci.up=0,
struc.zero=1, q.val=1, age.group="Infants", star="")
ven_us_0_2=rbind(ven_us_0_2, ven_us_0_2.1)
}
ven_us_18_40=ven_us_18_40%>%transmute(phylum, log.fold.change=`log fold change (VEN - US)`,
se=se, ci.lo=ci.lo.adj, ci.up=ci.up.adj,
struc.zero=ifelse(se==0, 1, 0),
q.val, age.group = "Adults",
star=ifelse(q.val<.001, "***",
ifelse(q.val<.01, "**",
ifelse(q.val<.05, "*", ""))))
if(length(setdiff(ven_us_phyla, ven_us_18_40$phylum))>0){
ven_us_18_40.1=data.frame(phylum=setdiff(ven_us_phyla, ven_us_18_40$phylum),
log.fold.change=0, se=0, ci.lo=0, ci.up=0,
struc.zero=1, q.val=1, age.group="Adults", star="")
ven_us_18_40=rbind(ven_us_18_40, ven_us_18_40.1)
}
dat.fig_ven_us=rbind(ven_us_0_2, ven_us_18_40)
dat.fig_ven_us$age.group=factor(dat.fig_ven_us$age.group,
levels = c("Infants", "Adults"))
dat.fig_ven_us$phylum=sapply(dat.fig_ven_us$phylum, function(x) strsplit(x, "__")[[1]][2])
dat.fig_ven_us$phylum=factor(dat.fig_ven_us$phylum, levels = sort(unique(dat.fig_ven_us$phylum)))
dat.fig_ven_us$struc.zero=factor(dat.fig_ven_us$struc.zero)
ma_ven_0_2=read_csv("../data/global_gut/ma_ven_phylum_age2.csv")
ma_ven_18_40=read_csv("../data/global_gut/ma_ven_phylum_age18_40.csv")
ma_ven_phyla=unique(c(ma_ven_18_40$phylum, ma_ven_0_2$phylum))
ma_ven_0_2=ma_ven_0_2%>%transmute(phylum, log.fold.change=`log fold change (MA - VEN)`,
se=se, ci.lo=ci.lo.adj, ci.up=ci.up.adj,
struc.zero=ifelse(se==0, 1, 0),
q.val, age.group = "Infants",
star=ifelse(q.val<.001, "***",
ifelse(q.val<.01, "**",
ifelse(q.val<.05, "*", ""))))
if(length(setdiff(ma_ven_phyla, ma_ven_0_2$phylum))>0){
ma_ven_0_2.1=data.frame(phylum=setdiff(ma_ven_phyla, ma_ven_0_2$phylum),
log.fold.change=0, se=0, ci.lo=0, ci.up=0,
struc.zero=1, q.val=1, age.group="Infants", star="")
ma_ven_0_2=rbind(ma_ven_0_2, ma_ven_0_2.1)
}
ma_ven_18_40=ma_ven_18_40%>%transmute(phylum, log.fold.change=`log fold change (MA - VEN)`,
se=se, ci.lo=ci.lo.adj, ci.up=ci.up.adj,
struc.zero=ifelse(se==0, 1, 0),
q.val, age.group = "Adults",
star=ifelse(q.val<.001, "***",
ifelse(q.val<.01, "**",
ifelse(q.val<.05, "*", ""))))
if(length(setdiff(ma_ven_phyla, ma_ven_18_40$phylum))>0){
ma_ven_18_40.1=data.frame(phylum=setdiff(ma_ven_phyla, ma_ven_18_40$phylum),
log.fold.change=0, se=0, ci.lo=0, ci.up=0,
struc.zero=1, q.val=1, age.group="Adults", star="")
ma_ven_18_40=rbind(ma_ven_18_40, ma_ven_18_40.1)
}
dat.fig_ma_ven=rbind(ma_ven_0_2, ma_ven_18_40)
dat.fig_ma_ven$age.group=factor(dat.fig_ma_ven$age.group,
levels = c("Infants", "Adults"))
dat.fig_ma_ven$phylum=sapply(dat.fig_ma_ven$phylum, function(x) strsplit(x, "__")[[1]][2])
dat.fig_ma_ven$phylum=factor(dat.fig_ma_ven$phylum, levels = sort(unique(dat.fig_ma_ven$phylum)))
dat.fig_ma_ven$struc.zero=factor(dat.fig_ma_ven$struc.zero)
dat.fig_ma_us2=cbind(dat.fig_ma_us, type="MA - US")
dat.fig_ven_us2=cbind(dat.fig_ven_us, type="VEN - US")
dat.fig_ma_ven2=cbind(dat.fig_ma_ven, type="MA - VEN")
dat.fig_ma_ven2=dat.fig_ma_ven2[-which(dat.fig_ma_ven2$phylum%in%c("Acidobacteria", "Chloroflexi")), ]
dat.fig_ma_ven2$phylum=factor(dat.fig_ma_ven2$phylum)
dat.fig=rbind(dat.fig_ma_us2, dat.fig_ven_us2, dat.fig_ma_ven2)
dat.fig$type=factor(dat.fig$type, levels = c("MA - US", "VEN - US", "MA - VEN"))
p1=ggplot(dat.fig, aes(x=phylum, y=log.fold.change, ymin=ci.lo, ymax=ci.up, group=age.group)) +
geom_bar(aes(fill=age.group), stat="identity", width=0.4, position=position_dodge())+
geom_errorbar(width=0.2, size=0.25, position=position_dodge(width = 0.4))+
geom_abline(slope = 0, intercept = 0, linetype="dashed", alpha=0.5)+
labs(x=NULL, y="Log Fold Change")+coord_flip()+
scale_fill_discrete(name=NULL)+
scale_x_discrete(limits = rev(levels(dat.fig$phylum)))+
facet_grid(.~type, scales = "free_x")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"))+
geom_text(aes(y=log.fold.change+4*sign(log.fold.change), label=star),
vjust=.7, color="black", position=position_dodge(width = .5))
p1 = p1+geom_point(data = dat.fig%>%filter(struc.zero==1), aes(x=phylum, y=log.fold.change),
position=position_dodge(width = 0.4), shape=18)
dat.fig.diff=BFres
# Bacteroidetes - Firmicutes
BFratio_summary = function(eval_data, country, age){
BFdiff=eval_data%>%dplyr::select(phylum, log.fold.change, se)%>%
filter(phylum%in%c("p__Bacteroidetes", "p__Firmicutes"))
diff_mean=BFdiff%>%filter(phylum == "p__Bacteroidetes")%>%.$log.fold.change-
BFdiff%>%filter(phylum == "p__Firmicutes")%>%.$log.fold.change
diff_se=sqrt(BFdiff%>%filter(phylum == "p__Bacteroidetes")%>%.$se%>%.^2+
BFdiff%>%filter(phylum == "p__Firmicutes")%>%.$se%>%.^2)
diff_p=2*pnorm(abs(diff_mean/diff_se), mean=0, sd=1, lower.tail = F)
ci_lo=diff_mean-1.96*diff_se
ci_up=diff_mean+1.96*diff_se
BFdiff=signif(c(diff_mean, diff_se, diff_p, ci_lo, ci_up), 2)
BFdiff=c(country, age, BFdiff)
return(BFdiff)
}
country.list = rep(c("MA - US", "VEN - US", "MA - VEN"), 2)
age.list = rep(c("Infants", "Adults"), each = 3)
eval.data.list = list(ma_us_0_2, ven_us_0_2, ma_ven_0_2, ma_us_18_40, ven_us_18_40, ma_ven_18_40)
BFres.list = vector(mode = "list", length = 6)
for (i in 1:6) {
country = country.list[i]
age = age.list[i]
eval.data = eval.data.list[[i]]
BFres.list[[i]] = BFratio_summary(eval.data, country, age)
}
BFres = as.data.frame(Reduce('rbind', BFres.list), stringsAsFactors = F)
rownames(BFres)=NULL
colnames(BFres)=c("country", "age", "log.fold.change", "se", "p.value", "ci.lo", "ci.up")
BFres$age = factor(BFres$age, levels = c("Infants", "Adults"))
dat.fig.diff=BFres
dat.fig.diff$log.fold.change=as.numeric(dat.fig.diff$log.fold.change)
dat.fig.diff$ci.lo=as.numeric(dat.fig.diff$ci.lo)
dat.fig.diff$ci.up=as.numeric(dat.fig.diff$ci.up)
dat.fig.diff$p.value=as.numeric(dat.fig.diff$p.value)
dat.fig.diff=dat.fig.diff%>%mutate(star=ifelse(p.value<.001, "***",
ifelse(p.value<.01, "**",
ifelse(p.value<.05, "*", ""))))
p2=ggplot(dat.fig.diff, aes(x=country, y=log.fold.change, ymin=ci.lo, ymax=ci.up, group=age)) +
geom_bar(aes(fill=age),
stat="identity", width=0.4, position=position_dodge())+
geom_errorbar(width=.2, size=.25, position=position_dodge(width = .4))+
geom_abline(slope = 0, intercept = 0, linetype="dashed", alpha=0.5)+
labs(x=NULL, y="Log Fold Change (Bacteroidetes - Firmicutes)")+coord_flip()+
scale_fill_discrete(name="")+
scale_x_discrete(limits = c("MA - VEN", "VEN - US", "MA - US"))+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "black"))+
geom_text(aes(y=log.fold.change+2.5*sign(log.fold.change), label=star),
vjust=.7, color="black", position=position_dodge(width = .5))
?ggarrange
p = ggarrange(p1, p2,
labels = c("a", "b"),
ncol = 2, nrow = 1, widths = c(2, 1),
common.legend = TRUE, legend="right")
p
p = ggarrange(p1, p2,
labels = c("a", "b"),
ncol = 2, nrow = 1, widths = c(2, 1),
common.legend = TRUE, legend="right")
p
ggsave("../figures/Figure 6.pdf", width=12, height=5, units='in')
ggsave("../figures/Figure 6.jpeg", width=12, height=5, units='in', dpi = 300)
p = ggarrange(p1, p2,
labels = c("a", "b"),
ncol = 2, nrow = 1, widths = c(2, 1),
common.legend = TRUE, legend="bottom")
p
ggsave("../figures/Figure 6.pdf", width=12, height=5, units='in')
ggsave("../figures/Figure 6.jpeg", width=12, height=5, units='in', dpi = 300)
