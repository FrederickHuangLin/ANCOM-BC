p=ggplot(p.df, aes(em, wls)) + geom_point(size = 0.3) +
geom_abline(slope = 1, intercept = 0, color = "steelblue", linetype="dashed") +
scale_x_continuous(breaks = seq(-0.6, 0.6, 0.3), limits = c(-0.65, 0.65)) +
scale_y_continuous(breaks = seq(-0.6, 0.6, 0.3), limits = c(-0.65, 0.65)) +
facet_wrap(.~prop)+
labs(x="EM estimator", y="WLS estimator")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
strip.background = element_rect(fill="white"))+
guides(color = guide_legend(override.aes = list(size=3)))+
geom_text(data = txt.df, mapping = aes(x = em, y = wls, label = label))
p
txt.df = data.frame(em = -0.35, wls = 0.4, prop = paste0(prop.diff*100, "%"), corr = NA, p = NA)
txt.df$corr = p.df%>%group_by(prop)%>%
summarise(corr = cor.test(em, wls)$estimate)%>%.$corr
txt.df$p = p.df%>%group_by(prop)%>%
summarise(p = cor.test(em, wls)$p.value)%>%.$p
txt.df = txt.df%>%mutate(level = ifelse(p < .001, "p < .001", round(p, 3)),
label = paste0("r = ", round(corr, 2), " (", level, ")"))
txt.df$prop = factor(txt.df$prop, levels = c("5%", "15%", "25%"))
p.df$prop = factor(p.df$prop, levels = c("5%", "15%", "25%"))
p=ggplot(p.df, aes(em, wls)) + geom_point(size = 0.3) +
geom_abline(slope = 1, intercept = 0, color = "steelblue", linetype="dashed") +
scale_x_continuous(breaks = seq(-0.6, 0.6, 0.3), limits = c(-0.65, 0.65)) +
scale_y_continuous(breaks = seq(-0.6, 0.6, 0.3), limits = c(-0.65, 0.65)) +
facet_wrap(.~prop)+
labs(x="EM estimator", y="WLS estimator")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
strip.background = element_rect(fill="white"))+
guides(color = guide_legend(override.aes = list(size=3)))+
geom_text(data = txt.df, mapping = aes(x = em, y = wls, label = label))
p
ggsave("../figures/Figure S9.pdf", width=6.25, height=5, units='in')
ggsave("../figures/Figure S9.jpeg", width=6.25, height=5, units='in', dpi = 300)
ggsave("../figures/Figure S9.pdf", width=10, height=5, units='in')
ggsave("../figures/Figure S9.jpeg", width=10, height=5, units='in', dpi = 300)
# The number of taxa, library size, and sample size
n.taxa = 1000; balanced.micro.load = FALSE; balanced.lib.size = TRUE
samp.frac = "small"; n.samp = "50_50"
# The proportion of differentially abundant taxa
prop.diff=c(0.05, 0.15, 0.25)
# Set seeds
iterNum=100
abn.seed=1
obs.seed=1:100
# Define the simulation parameters
simparams=expand.grid(n.taxa, n.samp, prop.diff, abn.seed, obs.seed,
balanced.micro.load, balanced.lib.size, samp.frac)
colnames(simparams)=c("n.taxa", "n.samp", "prop.diff", "abn.seed", "obs.seed",
"balanced.micro.load", "balanced.lib.size", "samp.frac")
simparams=simparams%>%separate(col = n.samp, into = c("n.samp.grp1", "n.samp.grp2"), sep = "_")
simparams=simparams%>%arrange(n.taxa, n.samp.grp1, prop.diff, abn.seed, obs.seed)
simparams.list=apply(simparams, 1, paste0, collapse="_")
simparamslabels=c("n.taxa", "n.samp.grp1", "n.samp.grp2","prop.diff", "abn.seed", "obs.seed",
"balanced.micro.load", "balanced.lib.size", "samp.frac")
# Read in original data
tab.df = read_csv("../data/sim_additional/bias_var_em_wls.csv")
# Reshape data
tab.df = data.frame(t(tab.df))
colnames(tab.df) = c("true", "em", "wls")
tab.df = tab.df%>%mutate(prop = rep(paste0(prop.diff*100, "%"), each = iterNum))
View(tab.df)
# Summary
tab = tab.df%>%group_by(prop)%>%
summarise(bias.em = (mean(em) - true[1])^2,
bias.wls = (mean(wls) - true[1])^2,
var.em = var(em),
var.wls = var(wls),
`1/(nm0)` = 1/(50*1000*(1-prop.diff)))%>%
arrange(prop, samp.size)
# Summary
tab = tab.df%>%group_by(prop)%>%
summarise(bias.em = (mean(em) - true[1])^2,
bias.wls = (mean(wls) - true[1])^2,
var.em = var(em),
var.wls = var(wls))%>%
arrange(prop, samp.size)
# Summary
tab = tab.df%>%group_by(prop)%>%
summarise(bias.em = (mean(em) - true[1])^2,
bias.wls = (mean(wls) - true[1])^2,
var.em = var(em),
var.wls = var(wls))%>%
arrange(prop)
View(tab)
tab.df = read_csv("../data/sim_additional/bias_var_em_wls.csv")
# Reshape data
tab.df = data.frame(t(tab.df))
colnames(tab.df) = c("true", "em", "wls")
tab.df = tab.df%>%mutate(prop = rep(prop.diff, each = iterNum))
# Summary
tab = tab.df%>%group_by(prop)%>%
summarise(bias.em = (mean(em) - true[1])^2,
bias.wls = (mean(wls) - true[1])^2,
var.em = var(em),
var.wls = var(wls),
`1/(nm0)` = 1/(50*1000*(1-prop)))%>%
arrange(prop)
# Summary
tab = tab.df%>%group_by(prop)%>%
summarise(bias.em = (mean(em) - true[1])^2,
bias.wls = (mean(wls) - true[1])^2,
var.em = var(em),
var.wls = var(wls),
`1/(nm0)` = 1/(50*1000*(1-prop[1])))%>%
arrange(prop)
View(tab)
1/(50*1000*0.95)
1/(50*1000*0.85)
?recode
tab$prop = recode(tab$prop, `0.05` = "5%", `0.15` = "15%", `0.25` = "25%")
pander(tab)
# Summary
tab = tab.df%>%group_by(prop)%>%
summarise(bias.em = signif((mean(em) - true[1])^2, 3),
bias.wls = signif((mean(wls) - true[1])^2, 3),
var.em = signif(var(em), 3),
var.wls = signif(var(wls), 3),
`1/(nm0)` = signif(1/(50*1000*(1-prop[1])), 3))%>%
arrange(prop)
tab$prop = recode(tab$prop, `0.05` = "5%", `0.15` = "15%", `0.25` = "25%")
pander(tab)
rm(list = ls())
library(tidyverse)
library(phyloseq)
library(ggpubr)
library(RColorBrewer)
library(DT)
library(pander)
panderOptions('table.caption.prefix', NULL)
panderOptions('table.continues', NULL)
panderOptions('table.emphasize.rownames', FALSE)
source("sim_data_poi_gam_two_grp.R")
source("ancom_bc_v1.0.R")
# Read in original data
tab.df = read_csv("../data/sim_additional/bias_var_em_wls.csv")
# Reshape data
tab.df = data.frame(t(tab.df))
colnames(tab.df) = c("true", "em", "wls")
tab.df = tab.df%>%mutate(diff = rep(prop.diff, each = iterNum))
# The number of taxa, library size, and sample size
n.taxa = 1000; balanced.micro.load = FALSE; balanced.lib.size = TRUE
samp.frac = "small"; n.samp = "50_50"
# The proportion of differentially abundant taxa
prop.diff=c(0.05, 0.15, 0.25)
# Set seeds
iterNum=100
abn.seed=1
obs.seed=1:100
# Define the simulation parameters
simparams=expand.grid(n.taxa, n.samp, prop.diff, abn.seed, obs.seed,
balanced.micro.load, balanced.lib.size, samp.frac)
colnames(simparams)=c("n.taxa", "n.samp", "prop.diff", "abn.seed", "obs.seed",
"balanced.micro.load", "balanced.lib.size", "samp.frac")
simparams=simparams%>%separate(col = n.samp, into = c("n.samp.grp1", "n.samp.grp2"), sep = "_")
simparams=simparams%>%arrange(n.taxa, n.samp.grp1, prop.diff, abn.seed, obs.seed)
simparams.list=apply(simparams, 1, paste0, collapse="_")
simparamslabels=c("n.taxa", "n.samp.grp1", "n.samp.grp2","prop.diff", "abn.seed", "obs.seed",
"balanced.micro.load", "balanced.lib.size", "samp.frac")
# Read in original data
tab.df = read_csv("../data/sim_additional/bias_var_em_wls.csv")
# Reshape data
tab.df = data.frame(t(tab.df))
colnames(tab.df) = c("true", "em", "wls")
tab.df = tab.df%>%mutate(diff = rep(prop.diff, each = iterNum))
# Summary
tab = tab.df%>%group_by(diff)%>%
summarise(bias2.em = signif((mean(em) - true[1])^2, 3),
bias2.wls = signif((mean(wls) - true[1])^2, 3),
var.em = signif(var(em), 3),
var.wls = signif(var(wls), 3),
`1/(nm0)` = signif(1/(50*1000*(1-diff[1])), 3))%>%
arrange(prop)
# Summary
tab = tab.df%>%group_by(diff)%>%
summarise(bias2.em = signif((mean(em) - true[1])^2, 3),
bias2.wls = signif((mean(wls) - true[1])^2, 3),
var.em = signif(var(em), 3),
var.wls = signif(var(wls), 3),
`1/(nm0)` = signif(1/(50*1000*(1-diff[1])), 3))%>%
arrange(diff)
tab$diff = recode(tab$diff, `0.05` = "5%", `0.15` = "15%", `0.25` = "25%")
pander(tab)
rm(list = ls())
library(tidyverse)
library(phyloseq)
library(ggpubr)
library(RColorBrewer)
library(DT)
library(pander)
panderOptions('table.caption.prefix', NULL)
panderOptions('table.continues', NULL)
panderOptions('table.emphasize.rownames', FALSE)
source("sim_data_poi_gam_two_grp.R")
source("ancom_bc_v1.0.R")
# The number of taxa, library size, and sample size
n.taxa = 1000; balanced.micro.load = FALSE; balanced.lib.size = TRUE
samp.frac = "small"; n.samp = "50_50"
# The proportion of differentially abundant taxa
prop.diff=c(0.05, 0.15, 0.25)
# Set seeds
iterNum=100
abn.seed=seq(iterNum)
# Define the simulation parameters
simparams=expand.grid(n.taxa, n.samp, prop.diff, abn.seed,
balanced.micro.load, balanced.lib.size, samp.frac)
colnames(simparams)=c("n.taxa", "n.samp", "prop.diff", "abn.seed",
"balanced.micro.load", "balanced.lib.size", "samp.frac")
simparams=simparams%>%mutate(obs.seed=abn.seed+1)
simparams=simparams%>%separate(col = n.samp, into = c("n.samp.grp1", "n.samp.grp2"), sep = "_")
simparams=simparams%>%arrange(n.taxa, n.samp.grp1, prop.diff, abn.seed, obs.seed)
simparams.list=apply(simparams, 1, paste0, collapse="_")
simparamslabels=c("n.taxa", "n.samp.grp1", "n.samp.grp2","prop.diff", "abn.seed",
"balanced.micro.load", "balanced.lib.size", "samp.frac", "obs.seed")
# Read in original data
p.df = read_csv("../data/sim_additional/em_vs_wls.csv")
# Reshape data
p.df = data.frame(t(p.df))
colnames(p.df) = c("true", "em", "wls")
p.df = p.df%>%mutate(prop = rep(paste0(prop.diff*100, "%"), each = iterNum))
# Annotation data
txt.df = data.frame(em = -0.35, wls = 0.4, prop = paste0(prop.diff*100, "%"), corr = NA, p = NA)
txt.df$corr = p.df%>%group_by(prop)%>%
summarise(corr = cor.test(em, wls)$estimate)%>%.$corr
txt.df$p = p.df%>%group_by(prop)%>%
summarise(p = cor.test(em, wls)$p.value)%>%.$p
View(txt.df)
txt.df = txt.df%>%mutate(level = ifelse(p < .001, "p < .001", round(p, 3)),
label = paste0("r = ", round(corr, 2), " (", level, ")"))
txt.df$prop = factor(txt.df$prop, levels = c("5%", "15%", "25%"))
p.df$prop = factor(p.df$prop, levels = c("5%", "15%", "25%"))
p=ggplot(p.df, aes(em, wls)) + geom_point(size = 0.3) +
geom_abline(slope = 1, intercept = 0, color = "steelblue", linetype="dashed") +
scale_x_continuous(breaks = seq(-0.6, 0.6, 0.3), limits = c(-0.65, 0.65)) +
scale_y_continuous(breaks = seq(-0.6, 0.6, 0.3), limits = c(-0.65, 0.65)) +
facet_wrap(.~prop)+
labs(x="EM estimator", y="WLS estimator")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
strip.background = element_rect(fill="white"))+
guides(color = guide_legend(override.aes = list(size=3)))+
geom_text(data = txt.df, mapping = aes(x = em, y = wls, label = label))
p
View(p.df)
temp = p.df%>%filter(prop = "25%")
temp = p.df%>%filter(prop == "25%")
View(temp)
cor.test(temp$em, temp$wls)
# Annotation data
txt.df = data.frame(em = -0.35, wls = 0.4, corr = NA, p = NA)
View(txt.df)
txt.df$corr = p.df%>%group_by(prop)%>%
summarise(corr = cor.test(em, wls)$estimate)%>%.$corr
# Annotation data
txt.df = p.df%>%group_by(prop)%>%
summarise(corr = cor.test(em, wls)$estimate,
p = cor.test(em, wls)$p.value))
# Annotation data
txt.df = p.df%>%group_by(prop)%>%
summarise(corr = cor.test(em, wls)$estimate,
p = cor.test(em, wls)$p.value)
View(txt.df)
# Annotation data
txt.df = p.df%>%group_by(prop)%>%
summarise(corr = cor.test(em, wls)$estimate,
p = cor.test(em, wls)$p.value)%>%
mutate(em = -0.35, wls = 0.4)
View(txt.df)
txt.df = txt.df%>%mutate(level = ifelse(p < .001, "p < .001", round(p, 3)),
label = paste0("r = ", round(corr, 2), " (", level, ")"))
txt.df$prop = factor(txt.df$prop, levels = c("5%", "15%", "25%"))
p.df$prop = factor(p.df$prop, levels = c("5%", "15%", "25%"))
p=ggplot(p.df, aes(em, wls)) + geom_point(size = 0.3) +
geom_abline(slope = 1, intercept = 0, color = "steelblue", linetype="dashed") +
scale_x_continuous(breaks = seq(-0.6, 0.6, 0.3), limits = c(-0.65, 0.65)) +
scale_y_continuous(breaks = seq(-0.6, 0.6, 0.3), limits = c(-0.65, 0.65)) +
facet_wrap(.~prop)+
labs(x="EM estimator", y="WLS estimator")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
strip.background = element_rect(fill="white"))+
guides(color = guide_legend(override.aes = list(size=3)))+
geom_text(data = txt.df, mapping = aes(x = em, y = wls, label = label))
p
rm(list = ls())
library(readr)
library(microbiome)
source("ancom_bc_v1.0.R")
data(dietswap)
pseq = dietswap
n_taxa = ntaxa(pseq)
n_samp = nsamples(pseq)
# Metadata
meta_data = meta(pseq)
# Taxonomy table
taxonomy = tax_table(pseq)
# Absolute abundances
otu_absolute = abundances(pseq)
# Pre-processing
feature.table = otu_absolute; sample.var = "sample"; group.var = "nationality";
zero.cut = 0.90; lib.cut = 1000; neg.lb = TRUE
pre.process = feature_table_pre_process(feature.table, meta_data, sample.var,
group.var, zero.cut, lib.cut, neg.lb)
feature.table = pre.process$feature.table
group.name = pre.process$group.name
group.ind = pre.process$group.ind
struc.zero = pre.process$structure.zeros
# Paras for ANCOM-BC
grp.name = group.name; grp.ind = group.ind; adj.method = "bonferroni"
tol.EM = 1e-5; max.iterNum = 100; perNum = 1000; alpha = 0.05
start_time<- Sys.time()
out = ANCOM_BC(feature.table, grp.name, grp.ind, struc.zero,
adj.method, tol.EM, max.iterNum, perNum, alpha)
end_time <- Sys.time()
end_time - start_time
# Pre-processing
feature.table = otu_absolute; sample.var = "sample"; group.var = "bmi_group";
zero.cut = 0.90; lib.cut = 1000; neg.lb = TRUE
pre.process = feature_table_pre_process(feature.table, meta_data, sample.var,
group.var, zero.cut, lib.cut, neg.lb)
feature.table = pre.process$feature.table
group.name = pre.process$group.name
group.ind = pre.process$group.ind
struc.zero = pre.process$structure.zeros
# Paras for ANCOM-BC
grp.name = group.name; grp.ind = group.ind; adj.method = "bonferroni"
tol.EM = 1e-5; max.iterNum = 100; perNum = 1000; alpha = 0.05
start_time <- Sys.time()
out = ANCOM_BC(feature.table, grp.name, grp.ind, struc.zero,
adj.method, tol.EM, max.iterNum, perNum, alpha)
end_time <- Sys.time()
end_time - start_time
rm(list = ls())
library(readxl)
library(tidyverse)
library(nloptr)
library(phyloseq)
library(stringr)
library(ggpubr)
library(magrittr)
library(qwraps2)
library(pander)
panderOptions('table.caption.prefix', NULL)
panderOptions('table.continues', NULL)
panderOptions('table.emphasize.rownames', FALSE)
source("ancom_bc_v1.0.R")
# Read in meta data
meta_data=read_tsv("../data/global_gut/global_gut_metadata.txt")
meta_data=meta_data%>%transmute(Sample.ID=`#SampleID`, age=AGE, sex=SEX, country=COUNTRY)%>%
arrange(Sample.ID)
meta_data=meta_data[complete.cases(meta_data), ]
meta_data$age=as.numeric(meta_data$age)
meta_data$country=recode(meta_data$country, `GAZ:Malawi` = "MA",
`GAZ:United States of America` = "US", `GAZ:Venezuela` = "VEN")
# From Yatsunenko's supplementary files
meta_data2=read_excel("../data/global_gut/NIHMS365354-supplement-3.xls", sheet = 1, skip = 2)
meta_data2=meta_data2[!is.na(meta_data2$`Sample Identifier`), ]
meta_data2=meta_data2%>%
transmute(Sample.ID=`Sample Identifier`, age=`Age (Years)`, gender=Gender,
bmi=`BMI (kg/m2)`, breast.fed=`Breast-fed`, country=Country)%>%
arrange(Sample.ID)
meta_data2$age=signif(as.numeric(meta_data2$age), digits = 2)
meta_data2$bmi=signif(as.numeric(meta_data2$bmi), digits = 2)
meta_data2$breast.fed[which(meta_data2$breast.fed=="NA1")]="NA"
# read in taxonomy
taxonomy=read_tsv("../data/global_gut/global_gut_taxonomy.txt")
taxonomy=taxonomy%>%rowwise()%>%
mutate(genus_name=paste(Phylum, Genus, sep = ";"))
# read in the OTU table and aggregate into phylum level
otu_table=read_tsv("../data/global_gut/global_gut_otu.txt")
otu_table=otu_table[, -532]
otu_table$OTU_ID=taxonomy$Phylum[match(otu_table$OTU_ID, taxonomy$OTU_ID)]
phylum_table=otu_table%>%group_by(OTU_ID)%>%
summarise_all(sum)
non_info_pos=grep("\\p__\\b", phylum_table$OTU_ID) # Exact match
phylum_table=phylum_table[-non_info_pos, ]
phylum_table=as.data.frame(phylum_table)
options(qwraps2_markup = "markdown")
summary_template =
list("Age" =
list("min" = ~ min(.data$age, na.rm = T),
"max" = ~ max(.data$age, na.rm = T),
"mean (sd)" = ~ qwraps2::mean_sd(.data$age, na_rm = T, show_n = "never")),
"BMI" =
list("min" = ~ min(.data$bmi, na.rm = T),
"max" = ~ max(.data$bmi, na.rm = T),
"mean (sd)" = ~ qwraps2::mean_sd(.data$bmi, na_rm = T, show_n = "never")),
"Gender" =
list("F" = ~ n_perc0(.data$gender=="Female"),
"M" = ~ n_perc0(.data$gender=="Male"),
"NA" = ~ n_perc0(.data$gender=="NA")),
"Breast Fed" =
list("Y" = ~ qwraps2::n_perc0(.data$breast.fed == "Yes"),
"N"  = ~ qwraps2::n_perc0(.data$breast.fed == "No (Formula-fed)"),
"NA"  = ~ qwraps2::n_perc0(.data$breast.fed == "NA"))
)
temp = summary_table(dplyr::group_by(meta_data2, country), summary_template)
temp
View(temp)
rm(list = ls())
library(tidyverse)
library(phyloseq)
library(ggpubr)
library(RColorBrewer)
library(DT)
library(pander)
panderOptions('table.caption.prefix', NULL)
panderOptions('table.continues', NULL)
panderOptions('table.emphasize.rownames', FALSE)
source("sim_data_poi_gam_two_grp.R")
source("ancom_bc_v1.0.R")
source("ancom_simple.R")
# The number of taxa, library size, and sample size
n.taxa = 1000; balanced.micro.load = FALSE; balanced.lib.size = TRUE
samp.frac = "small"; n.samp = c("20_30", "50_50")
# The proportion of differentially abundant taxa
prop.diff=c(0.05, 0.15, 0.25)
# Set seeds
iterNum=100
abn.seed=seq(iterNum)
# Define the simulation parameters
simparams=expand.grid(n.taxa, n.samp, prop.diff, abn.seed,
balanced.micro.load, balanced.lib.size, samp.frac)
colnames(simparams)=c("n.taxa", "n.samp", "prop.diff", "abn.seed",
"balanced.micro.load", "balanced.lib.size", "samp.frac")
simparams=simparams%>%mutate(obs.seed=abn.seed+1)
simparams=simparams%>%separate(col = n.samp, into = c("n.samp.grp1", "n.samp.grp2"), sep = "_")
simparams=simparams%>%arrange(n.taxa, n.samp.grp1, prop.diff, abn.seed, obs.seed)
simparams.list=apply(simparams, 1, paste0, collapse="_")
simparamslabels=c("n.taxa", "n.samp.grp1", "n.samp.grp2","prop.diff", "abn.seed",
"balanced.micro.load", "balanced.lib.size", "samp.frac", "obs.seed")
## Read in original data
dat.ancom_bc=read_csv("../data/sim_poi_gam/large/fdr_power_ancom_bc_bh.csv")
dat.ancom=read_csv("../data/sim_poi_gam/large/fdr_power_ancom_large.csv")
dat.deseq2=read_csv("../data/sim_poi_gam/large/fdr_power_deseq2_large.csv")
dat.edger=read_csv("../data/sim_poi_gam/large/fdr_power_edger_large.csv")
dat.zilg=read_csv("../data/sim_poi_gam/large/fdr_power_zilg_large.csv")
dat.zig=read_csv("../data/sim_poi_gam/large/fdr_power_zig_large.csv")
dat.wilcox_un=read_csv("../data/sim_poi_gam/large/fdr_power_wilcox_un_large.csv")
dat.wilcox_tss=read_csv("../data/sim_poi_gam/large/fdr_power_wilcox_tss_large.csv")
## Reshaping data
simpattern=distinct(simparams, n.taxa, n.samp.grp1, n.samp.grp2, prop.diff)
data_summary = function(eval_data, method){
FDR=tapply(as.numeric(eval_data[1, ]),
rep(seq(nrow(simpattern)), each=iterNum), function(x) mean(x, na.rm = T))
FDRSD=tapply(as.numeric(eval_data[1, ]),
rep(seq(nrow(simpattern)), each=iterNum), function(x) sd(x, na.rm = T))
power=tapply(as.numeric(eval_data[2, ]),
rep(seq(nrow(simpattern)), each=iterNum), function(x) mean(x, na.rm = T))
powerSD=tapply(as.numeric(eval_data[2, ]),
rep(seq(nrow(simpattern)), each=iterNum), function(x) sd(x, na.rm = T))
data_sum = data.frame(FDR, FDRSD, power, powerSD, simpattern, method)
data_sum = data_sum%>%unite(n.samp.grp, n.samp.grp1, n.samp.grp2, sep = ", ")
return(data_sum)
}
eval.dat.list = list(dat.ancom_bc, dat.ancom, dat.deseq2, dat.edger,
dat.zilg, dat.zig, dat.wilcox_un, dat.wilcox_tss)
method.list = list("ANCOM-BC", "ANCOM", "DESeq2", "edgeR", "ZILG", "ZIG", "Wilcoxon", "Wilcoxon + TSS")
dat.fig.list = vector(mode = "list", length = length(eval.dat.list))
for (i in 1:length(eval.dat.list)) {
dat.fig.list[[i]] = data_summary(eval.dat.list[[i]], method.list[[i]])
}
## Merge data
dat.fig=Reduce('rbind', dat.fig.list)
dat.fig$n.samp.grp=factor(dat.fig$n.samp.grp)
levels(dat.fig$n.samp.grp)=c("n = 20/30", "n = 50/50")
dat.fig$method=factor(dat.fig$method)
dat.fig$prop.diff=factor(dat.fig$prop.diff)
dat.fig%>%datatable()%>%formatRound(columns=c("FDR", "FDRSD", "power", "powerSD"), digits=3)
p1=ggplot(dat.fig, aes(x=prop.diff, y=FDR, fill=method)) +
geom_hline(yintercept=0.05, linetype="solid", color="black", size = 0.2)+
geom_hline(yintercept=0.05+sqrt(0.05*0.95/100), linetype="dashed", color="black", size = 0.2)+
scale_y_continuous(breaks = c(0.05, seq(0.2, 1, 0.2)), limits = c(0, 0.8))+
coord_flip()+facet_grid(.~n.samp.grp)+
geom_bar(stat="identity", position=position_dodge())+
labs(x="Proportion of Differentially Abundant Taxa", y="", fill=NULL, title="FDR")+
scale_fill_brewer(palette="Dark2")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title=element_text(hjust = 0.5),
strip.background = element_rect(fill="white"),
legend.position = "bottom")+
guides(fill=guide_legend(nrow=2, byrow=TRUE))
ggarrange(p1, labels = "a")
p2=ggplot(dat.fig, aes(x=prop.diff, y=power, fill=method)) +
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0, 1))+
coord_flip()+facet_grid(.~n.samp.grp)+
geom_bar(stat="identity", position=position_dodge())+
labs(x="Proportion of Differentially Abundant Taxa", y="", fill=NULL, title="Power")+
scale_fill_brewer(palette="Dark2")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"),
plot.title=element_text(hjust = 0.5),
legend.position = "bottom")+
guides(fill=guide_legend(nrow=2, byrow=TRUE))
ggarrange(p2, labels = "b")
