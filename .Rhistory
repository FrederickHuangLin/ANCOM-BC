# Define the simulation parameters
simparams=expand.grid(n.taxa, n.samp, prop.diff, abn.seed, samp.frac.var)
colnames(simparams)=c("n.taxa", "n.samp", "prop.diff", "abn.seed", "samp.frac.var")
simparams=simparams%>%mutate(obs.seed=abn.seed+1)
simparams=simparams%>%separate(col = n.samp, into = c("n.samp.grp1", "n.samp.grp2"), sep = "_")
simparams$n.samp.grp1
# The number of taxa, samping fraction variability, and sample size
n.taxa=1000; samp.frac.var="large"; n.samp=c("5_5", "10_10")
# The proportion of differentially abundant taxa
prop.diff=c(0.05, 0.15, 0.25)
# Set seeds
iterNum=100
abn.seed=seq(iterNum)
# Define the simulation parameters combinations
simparams=expand.grid(n.taxa, n.samp, prop.diff, abn.seed, samp.frac.var)
colnames(simparams)=c("n.taxa", "n.samp", "prop.diff", "abn.seed", "samp.frac.var")
simparams=simparams%>%mutate(obs.seed=abn.seed+1)
simparams=simparams%>%separate(col = n.samp, into = c("n.samp.grp1", "n.samp.grp2"), sep = "_")
simparams=simparams%>%arrange(n.taxa, n.samp.grp1, prop.diff, abn.seed, obs.seed)
simparams.list=apply(simparams, 1, paste0, collapse="_")
simparamslabels=c("n.taxa", "n.samp.grp1", "n.samp.grp2","prop.diff",
"abn.seed", "samp.frac.var", "obs.seed")
View(simparams)
## Read in original data
dat.ancom_bc=read_csv("../data/sim_small_samp/fdr_power_small_samp_ancom_bc.csv")
dat.ancom=read_csv("../data/sim_small_samp/fdr_power_small_samp_ancom.csv")
dat.deseq2=read_csv("../data/sim_small_samp/fdr_power_small_samp_deseq2.csv")
dat.edger=read_csv("../data/sim_small_samp/fdr_power_small_samp_edger.csv")
dat.zilg=read_csv("../data/sim_small_samp/fdr_power_small_samp_zilg.csv")
dat.zig=read_csv("../data/sim_small_samp/fdr_power_small_samp_zig.csv")
dat.wilcox_un=read_csv("../data/sim_small_samp/fdr_power_small_samp_wilcox_un.csv")
dat.wilcox_tss=read_csv("../data/sim_small_samp/fdr_power_small_samp_wilcox_tss.csv")
## Reshaping data
simpattern=distinct(simparams, n.taxa, n.samp.grp1, n.samp.grp2, prop.diff)
eval.dat.list = list(dat.ancom_bc, dat.ancom, dat.deseq2, dat.edger,
dat.zilg, dat.zig, dat.wilcox_un, dat.wilcox_tss)
method.list = list("ANCOM-BC", "ANCOM", "DESeq2", "edgeR", "ZILG", "ZIG", "Wilcoxon", "Wilcoxon + TSS")
dat.fig.list = vector(mode = "list", length = length(eval.dat.list))
for (i in 1:length(eval.dat.list)) {
dat.fig.list[[i]] = data_summary(eval.dat.list[[i]], method.list[[i]])
}
## Merge data
dat.fig=Reduce('rbind', dat.fig.list)
dat.fig$n.samp.grp=recode(dat.fig$n.samp.grp,
`5, 5`="n = 5/5", `10, 10`="n = 10/10")
dat.fig$n.samp.grp=factor(dat.fig$n.samp.grp, levels = c("n = 5/5", "n = 10/10"))
dat.fig$method=factor(dat.fig$method)
dat.fig$prop.diff=factor(dat.fig$prop.diff)
dat.fig%>%datatable()%>%formatRound(columns=c("FDR", "FDRSD", "power", "powerSD"), digits=3)
View(simpattern)
dat.fig=dat.fig%>%arrange(n.samp.grp)
dat.fig%>%datatable()%>%formatRound(columns=c("FDR", "FDRSD", "power", "powerSD"), digits=3)
dat.fig=Reduce('rbind', dat.fig.list)
dat.fig$n.samp.grp=recode(dat.fig$n.samp.grp,
`5, 5`="n = 5/5", `10, 10`="n = 10/10")
dat.fig$n.samp.grp=factor(dat.fig$n.samp.grp, levels = c("n = 5/5", "n = 10/10"))
dat.fig$method=factor(dat.fig$method)
dat.fig$prop.diff=factor(dat.fig$prop.diff)
dat.fig=dat.fig%>%arrange(method, n.samp.grp)
dat.fig%>%datatable()%>%formatRound(columns=c("FDR", "FDRSD", "power", "powerSD"), digits=3)
p=ggplot(dat.fig, aes(x=prop.diff, y=FDR, fill=method)) +
geom_hline(yintercept=0.05, linetype="dashed", color="black", size = 0.2)+
scale_y_continuous(breaks = c(0.05, seq(0.2, 1, 0.2)), limits = c(0, 0.8))+
coord_flip()+facet_grid(.~n.samp.grp)+
geom_bar(stat="identity", position=position_dodge())+
labs(x="Proportion of Differentially Abundant Taxa", y="", fill=NULL, title="FDR")+
scale_fill_brewer(palette="Dark2")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title=element_text(hjust = 0.5),
strip.background = element_rect(fill="white"),
legend.position = "bottom")+
guides(fill=guide_legend(nrow=2, byrow=TRUE))
ggarrange(p, labels = "a")
p=ggplot(dat.fig, aes(x=prop.diff, y=power, fill=method)) +
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0, 1))+
coord_flip()+facet_grid(.~n.samp.grp)+
geom_bar(stat="identity", position=position_dodge())+
labs(x="Proportion of Differentially Abundant Taxa", y="", fill=NULL, title="Power")+
scale_fill_brewer(palette="Dark2")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"),
plot.title=element_text(hjust = 0.5),
legend.position = "bottom")+
guides(fill=guide_legend(nrow=2, byrow=TRUE))
ggarrange(p, labels = "b")
library(microbiome)
source("ancom_bc_v1.0.R")
data(dietswap)
pseq = dietswap
n_taxa = ntaxa(pseq)
n_samp = nsamples(pseq)
# Metadata
meta_data = meta(pseq)
# Taxonomy table
taxonomy = tax_table(pseq)
# Absolute abundances
otu_absolute = abundances(pseq)
View(meta_data)
feature.table = otu_absolute; sample.var = "sample"; group.var = "nationality";
zero.cut = 0.90; lib.cut = 1000; neg.lb = TRUE
pre.process = feature_table_pre_process(feature.table, meta_data, sample.var,
group.var, zero.cut, lib.cut, neg.lb)
feature.table = pre.process$feature.table
group.name = pre.process$group.name
group.ind = pre.process$group.ind
struc.zero = pre.process$structure.zeros
# Paras for ANCOM-BC
grp.name = group.name; grp.ind = group.ind; adj.method = "bonferroni"
tol.EM = 1e-5; max.iterNum = 100; perNum = 1000; alpha = 0.05
out = ANCOM_BC(feature.table, grp.name, grp.ind, struc.zero,
adj.method, tol.EM, max.iterNum, perNum, alpha)
res = out$res
View(res)
res = cbind(taxon = rownames(out$feature.table), out$res)
View(res)
sum(res$diff.abn)
write_csv(res, "demo_two_group.csv")
library(readr)
write_csv(res, "demo_two_group.csv")
# Pre-processing
feature.table = otu_absolute; sample.var = "sample"; group.var = "bmi_group";
zero.cut = 0.90; lib.cut = 1000; neg.lb = TRUE
pre.process = feature_table_pre_process(feature.table, meta_data, sample.var,
group.var, zero.cut, lib.cut, neg.lb)
feature.table = pre.process$feature.table
group.name = pre.process$group.name
group.ind = pre.process$group.ind
struc.zero = pre.process$structure.zeros
# Paras for ANCOM-BC
grp.name = group.name; grp.ind = group.ind; adj.method = "bonferroni"
tol.EM = 1e-5; max.iterNum = 100; perNum = 1000; alpha = 0.05
out = ANCOM_BC(feature.table, grp.name, grp.ind, struc.zero,
adj.method, tol.EM, max.iterNum, perNum, alpha)
res = cbind(taxon = rownames(out$feature.table), out$res)
write_csv(res, "demo_multi_group.csv")
View(res)
sum(res$diff.abn)
source("ancom_bc_v1.0.R")
View(feature_table_pre_process)
View(ANCOM_BC)
rm(list = ls())
library(tidyverse)
library(phyloseq)
library(ggpubr)
library(RColorBrewer)
library(DT)
library(pander)
panderOptions('table.caption.prefix', NULL)
panderOptions('table.continues', NULL)
panderOptions('table.emphasize.rownames', FALSE)
source("sim_data_poi_gam_two_grp.R")
source("ancom_bc_v1.0.R")
source("ancom_simple.R")
rm(list = ls())
library(tidyverse)
library(phyloseq)
library(ggpubr)
library(pander)
panderOptions('table.caption.prefix', NULL)
panderOptions('table.continues', NULL)
panderOptions('table.emphasize.rownames', FALSE)
gg_color_hue=function(n){
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
source("ancom_bc_v1.0.R")
source("sim_data_poi_gam_two_grp.R")
rm(list = ls())
library(tidyverse)
library(phyloseq)
library(ggpubr)
library(RColorBrewer)
library(DT)
library(pander)
panderOptions('table.caption.prefix', NULL)
panderOptions('table.continues', NULL)
panderOptions('table.emphasize.rownames', FALSE)
source("sim_data_poi_gam_two_grp.R")
source("ancom_bc_v1.0.R")
source("ancom_simple.R")
# The number of taxa, library size, and sample size
n.taxa=1000; samp.frac.var="large"; n.samp=c("20_30", "50_50")
# The proportion of differentially abundant taxa
prop.diff=c(0.05, 0.15, 0.25)
# Set seeds
iterNum=100
abn.seed=seq(iterNum)
# Define the simulation parameters
simparams=expand.grid(n.taxa, n.samp, prop.diff, abn.seed, samp.frac.var)
colnames(simparams)=c("n.taxa", "n.samp", "prop.diff", "abn.seed", "samp.frac.var")
simparams=simparams%>%mutate(obs.seed=abn.seed+1)
simparams=simparams%>%separate(col = n.samp, into = c("n.samp.grp1", "n.samp.grp2"), sep = "_")
simparams=simparams%>%arrange(n.taxa, n.samp.grp1, prop.diff, abn.seed, obs.seed)
simparams.list=apply(simparams, 1, paste0, collapse="_")
simparamslabels=c("n.taxa", "n.samp.grp1", "n.samp.grp2","prop.diff",
"abn.seed", "samp.frac.var", "obs.seed")
## Read in original data
dat.ancom_bc=read_csv("../data/sim_poi_gam/large/fdr_power_ancom_bc_large.csv")
dat.ancom=read_csv("../data/sim_poi_gam/large/fdr_power_ancom_large.csv")
dat.deseq2=read_csv("../data/sim_poi_gam/large/fdr_power_deseq2_large.csv")
dat.edger=read_csv("../data/sim_poi_gam/large/fdr_power_edger_large.csv")
dat.zilg=read_csv("../data/sim_poi_gam/large/fdr_power_zilg_large.csv")
dat.zig=read_csv("../data/sim_poi_gam/large/fdr_power_zig_large.csv")
dat.wilcox_un=read_csv("../data/sim_poi_gam/large/fdr_power_wilcox_un_large.csv")
dat.wilcox_tss=read_csv("../data/sim_poi_gam/large/fdr_power_wilcox_tss_large.csv")
## Reshaping data
simpattern=distinct(simparams, n.taxa, n.samp.grp1, n.samp.grp2, prop.diff)
data_summary = function(eval_data, method){
FDR=tapply(as.numeric(eval_data[1, ]),
rep(seq(nrow(simpattern)), each=iterNum), function(x) mean(x, na.rm = T))
FDRSD=tapply(as.numeric(eval_data[1, ]),
rep(seq(nrow(simpattern)), each=iterNum), function(x) sd(x, na.rm = T))
power=tapply(as.numeric(eval_data[2, ]),
rep(seq(nrow(simpattern)), each=iterNum), function(x) mean(x, na.rm = T))
powerSD=tapply(as.numeric(eval_data[2, ]),
rep(seq(nrow(simpattern)), each=iterNum), function(x) sd(x, na.rm = T))
data_sum = data.frame(FDR, FDRSD, power, powerSD, simpattern, method)
data_sum = data_sum%>%unite(n.samp.grp, n.samp.grp1, n.samp.grp2, sep = ", ")
return(data_sum)
}
eval.dat.list = list(dat.ancom_bc, dat.ancom, dat.deseq2, dat.edger,
dat.zilg, dat.zig, dat.wilcox_un, dat.wilcox_tss)
method.list = list("ANCOM-BC", "ANCOM", "DESeq2", "edgeR", "ZILG", "ZIG", "Wilcoxon", "Wilcoxon + TSS")
dat.fig.list = vector(mode = "list", length = length(eval.dat.list))
for (i in 1:length(eval.dat.list)) {
dat.fig.list[[i]] = data_summary(eval.dat.list[[i]], method.list[[i]])
}
## Merge data
dat.fig=Reduce('rbind', dat.fig.list)
dat.fig$n.samp.grp=factor(dat.fig$n.samp.grp)
levels(dat.fig$n.samp.grp)=c("n = 20/30", "n = 50/50")
dat.fig$method=factor(dat.fig$method)
dat.fig$prop.diff=factor(dat.fig$prop.diff)
dat.fig%>%datatable()%>%formatRound(columns=c("FDR", "FDRSD", "power", "powerSD"), digits=3)
p=ggplot(dat.fig, aes(x=prop.diff, y=FDR, fill=method)) +
geom_hline(yintercept=0.05, linetype="solid", color="black", size = 0.2)+
geom_hline(yintercept=0.05+sqrt(0.05*0.95/100), linetype="dashed", color="black", size = 0.2)+
scale_y_continuous(breaks = c(0.05, seq(0.2, 1, 0.2)), limits = c(0, 0.8))+
coord_flip()+facet_grid(.~n.samp.grp)+
geom_bar(stat="identity", position=position_dodge())+
labs(x="Proportion of Differentially Abundant Taxa", y="", fill=NULL, title="FDR")+
scale_fill_brewer(palette="Dark2")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title=element_text(hjust = 0.5),
strip.background = element_rect(fill="white"),
legend.position = "bottom")+
guides(fill=guide_legend(nrow=2, byrow=TRUE))
ggarrange(p, labels = "a")
p1=ggplot(dat.fig, aes(x=prop.diff, y=FDR, fill=method)) +
geom_hline(yintercept=0.05, linetype="solid", color="black", size = 0.2)+
geom_hline(yintercept=0.05+sqrt(0.05*0.95/100), linetype="dashed", color="black", size = 0.2)+
scale_y_continuous(breaks = c(0.05, seq(0.2, 1, 0.2)), limits = c(0, 0.8))+
coord_flip()+facet_grid(.~n.samp.grp)+
geom_bar(stat="identity", position=position_dodge())+
labs(x="Proportion of Differentially Abundant Taxa", y="", fill=NULL, title="FDR")+
scale_fill_brewer(palette="Dark2")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title=element_text(hjust = 0.5),
strip.background = element_rect(fill="white"),
legend.position = "bottom")+
guides(fill=guide_legend(nrow=2, byrow=TRUE))
ggarrange(p1, labels = "a")
p2=ggplot(dat.fig, aes(x=prop.diff, y=power, fill=method)) +
scale_y_continuous(breaks = seq(0.2, 1, 0.2), limits = c(0, 1))+
coord_flip()+facet_grid(.~n.samp.grp)+
geom_bar(stat="identity", position=position_dodge())+
labs(x="Proportion of Differentially Abundant Taxa", y="", fill=NULL, title="Power")+
scale_fill_brewer(palette="Dark2")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_rect(fill="white"),
plot.title=element_text(hjust = 0.5),
legend.position = "bottom")+
guides(fill=guide_legend(nrow=2, byrow=TRUE))
ggarrange(p2, labels = "b")
p = ggarrange(p1, p2,
ncol = 1, nrow = 2)
p
p = ggarrange(p1+theme(legend.position = "none"), p2,
labels = c("a", "b"),
ncol = 1, nrow = 2)
p
p = ggarrange(p1, p2,
labels = c("a", "b"),
ncol = 1, nrow = 2,
common.legend = TRUE, legend="bottom")
p
?ggarrange
p = ggarrange(p1 + labs(x=NULL), p2 + labs(x=NULL),
labels = c("a", "b"),
ncol = 1, nrow = 2,
common.legend = TRUE, legend="bottom")
p
annotate_figure(p, left = text_grob("Proportion of Differentially Abundant Taxa", rot = 90))
annotate_figure(p, left = text_grob("Proportion of Differentially Abundant Taxa", rot = 90))
ggsave("../figures/Figure 4.pdf", width=6.25, height=10, units='in')
ggsave("../figures/Figure 4.jpeg", width=6.25, height=10, units='in', dpi = 300)
annotate_figure(p, left = text_grob("Proportion of Differentially Abundant Taxa", rot = 90))
ggsave("../figures/Figure 4.pdf", width=6.25, height=9, units='in')
ggsave("../figures/Figure 4.jpeg", width=6.25, height=9, units='in', dpi = 300)
p = ggarrange(p1 + labs(x=NULL), p2 + labs(x=NULL),
labels = c("a", "b"), hjust = 1,
ncol = 1, nrow = 2,
common.legend = TRUE, legend="bottom")
annotate_figure(p, left = text_grob("Proportion of Differentially Abundant Taxa", rot = 90))
p = ggarrange(p1 + labs(x=NULL), p2 + labs(x=NULL),
labels = c("a", "b"), hjust = 0,
ncol = 1, nrow = 2,
common.legend = TRUE, legend="bottom")
annotate_figure(p, left = text_grob("Proportion of Differentially Abundant Taxa", rot = 90))
p = ggarrange(p1 + labs(x=NULL), p2 + labs(x=NULL),
labels = c("a", "b"),
ncol = 1, nrow = 2,
common.legend = TRUE, legend="bottom")
annotate_figure(p, left = text_grob("Proportion of Differentially Abundant Taxa", rot = 90))
rm(list = ls())
library(tidyverse)
library(microbiome)
library(ggpubr)
library(RColorBrewer)
library(DT)
library(pander)
panderOptions('table.caption.prefix', NULL)
panderOptions('table.continues', NULL)
panderOptions('table.emphasize.rownames', FALSE)
source("sim_data_soil.R")
source("ancom_bc_v1.0.R")
source("ancom_simple.R")
rm(list = ls())
library(tidyverse)
library(nloptr)
library(phyloseq)
library(stringr)
library(RColorBrewer)
library(ggpubr)
library(ggforce)
library(limma)
library(vegan)
library(MASS)
library(pander)
panderOptions('table.caption.prefix', NULL)
panderOptions('table.continues', NULL)
panderOptions('table.emphasize.rownames', FALSE)
source("ancom_bc_v1.0.R")
source("ancom_v1.0.R")
txt.df = read_csv("../data/global_gut/ssb.csv")
p.df = read_csv("../data/global_gut/nmds.csv")
p=ggplot(p.df, aes(X1, X2, color = country)) + geom_point(size = 0.3) +
facet_wrap(.~method, nrow = 2)+scale_y_continuous(limits = c(-0.3, 0.3))+
labs(x="First NMDS coordinate", y="Second NMDS coordinate")+
scale_color_discrete(name="", breaks=c("MA", "VEN"), labels = c("Malawi", "Venezuela"))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
strip.background = element_rect(fill="white"))+
guides(color = guide_legend(override.aes = list(size=3)))+
geom_text(data = txt.df, mapping = aes(x = X1, y = X2, label = ssb, color = NULL,group= NULL))
ggarrange(p, labels = "a")
# Meta data
meta_data=read_tsv("../data/global_gut/global_gut_metadata.txt")
meta_data=meta_data%>%transmute(Sample.ID=`#SampleID`, age=AGE, sex=SEX, country=COUNTRY)%>%
arrange(Sample.ID)
meta_data=meta_data[complete.cases(meta_data), ]
meta_data$age=as.numeric(meta_data$age)
meta_data$country=recode(meta_data$country, `GAZ:Malawi` = "MA",
`GAZ:United States of America` = "US", `GAZ:Venezuela` = "VEN")
# Taxonomy
taxonomy=read_tsv("../data/global_gut/global_gut_taxonomy.txt")
taxonomy=taxonomy%>%rowwise()%>%
mutate(genus_name=paste(Phylum, Genus, sep = ";"))
# OTU table
otu_table=read_tsv("../data/global_gut/global_gut_otu.txt")
otu_table=otu_table[, -532]
otu_table$OTU_ID=taxonomy$genus_name[match(otu_table$OTU_ID, taxonomy$OTU_ID)]
otu_table=as.data.frame(otu_table)
otu_table[, -1]=apply(otu_table[, -1], 2, as.numeric)
# Aggregate into genus level
genus_table=otu_table%>%group_by(OTU_ID)%>%
summarise_all(sum)
non_info_pos=grep("\\g__\\b", genus_table$OTU_ID) # Exact match
genus_table=genus_table[-non_info_pos, ]
genus_table=as.data.frame(genus_table)
# Subset meta data
meta.data=meta_data%>%filter(country%in%c("MA", "VEN"))
meta.data$country=as.character(meta.data$country)
# Subset OTU table
obs.abn=genus_table
rownames(obs.abn)=obs.abn$OTU_ID
obs.abn=obs.abn[, -1]
obs.abn=obs.abn[, meta.data$Sample.ID]
# Recode sample ID
meta.data$Sample.ID=seq(nrow(meta.data))
colnames(obs.abn)=seq(nrow(meta.data))
feature.table=obs.abn; sample.var="Sample.ID"; group.var="country";
zero.cut=0.90; lib.cut=1000; neg.lb=TRUE
pre.process=feature_table_pre_process(feature.table, meta.data, sample.var,
group.var, zero.cut, lib.cut, neg.lb)
feature.table=pre.process$feature.table
library.size=pre.process$library.size
group.name=pre.process$group.name
group.ind=pre.process$group.ind
struc.zero=pre.process$structure.zeros
# Paras for ANCOM-BC
grp.name=group.name; grp.ind=group.ind; adj.method="BH"
tol.EM=1e-5; max.iterNum=100; perNum=1000; alpha=0.05
# Run ANCOM-BC
out=ANCOM_BC(feature.table, grp.name, grp.ind, struc.zero, adj.method,
tol.EM, max.iterNum, perNum, alpha)
ancom.bc=out$d
y.ancom.bc=t(t(log(out$feature.table+1))-ancom.bc)
y.ancom.bc=y.ancom.bc+abs(min(y.ancom.bc, na.rm = T))
dist.ancom.bc=vegdist(t(y.ancom.bc), method="bray", na.rm = T)
fit.ancom.bc=isoMDS(dist.ancom.bc, k=2)
mds.xy.ancom.bc=data.frame(method = "ANCOM-BC", fit.ancom.bc$points)
mds.xy.ancom.bc$country=meta.data$country[match(colnames(out$feature.table), meta.data$Sample.ID)]
countdata=obs.abn
zero.threshold=0.90
taxa.info.ind=apply(countdata, 1, function(x) sum(x==0)/ncol(countdata))
countdata=countdata[which(taxa.info.ind<zero.threshold), ]+1L
# CSS: Cumulative-sum scaling
rownames(meta.data)=meta.data$Sample.ID
phenotypeData = Biobase::AnnotatedDataFrame(meta.data)
obj = metagenomeSeq::newMRexperiment(countdata, phenoData=phenotypeData, featureData=NULL)
# Calculating normalization factors
obj = metagenomeSeq::cumNorm(obj)
CSS = metagenomeSeq::normFactors(obj)
y.css=t(t(log(countdata))-log(CSS))
y.css=y.css+abs(min(y.css))
dist.css=vegdist(t(y.css), method="bray", na.rm = T)
fit.css=isoMDS(dist.css, k=2)
mds.xy.css=data.frame(method = "CSS", fit.css$points, country = meta.data$country)
coldata=meta.data
count.table=DESeq2::DESeqDataSetFromMatrix(countData = countdata,
colData = coldata, design = ~ country)
dds=DESeq2::DESeq(count.table, quiet = TRUE)
MED=DESeq2::sizeFactors(dds)
y.med=t(t(log(countdata))-log(MED))
y.med=y.med+abs(min(y.med))
dist.med=vegdist(t(y.med), method="bray", na.rm = T)
fit.med=isoMDS(dist.med, k=2)
mds.xy.med=data.frame(method = "MED", fit.med$points, country = meta.data$country)
groupdata=meta.data$country
dds=edgeR::DGEList(counts = countdata, group = groupdata)
dds=edgeR::calcNormFactors(dds, method="upperquartile")
UQ=dds$samples$norm.factors
y.uq=t(t(log(countdata))-log(UQ))
y.uq=y.uq+abs(min(y.uq))
dist.uq=vegdist(t(y.uq), method="bray", na.rm = T)
fit.uq=isoMDS(dist.uq, k=2)
mds.xy.uq=data.frame(method = "UQ", fit.uq$points, country = meta.data$country)
dds=edgeR::DGEList(counts = countdata, group = groupdata)
dds=edgeR::calcNormFactors(dds, method="TMM")
TMM=dds$samples$norm.factors
y.tmm=t(t(log(countdata))-log(TMM))
y.tmm=y.tmm+abs(min(y.tmm))
dist.tmm=vegdist(t(y.tmm), method="bray", na.rm = T)
fit.tmm=isoMDS(dist.tmm, k=2)
mds.xy.tmm=data.frame(method = "TMM", fit.tmm$points, country = meta.data$country)
TSS=colSums(countdata, na.rm = T)
y.tss=t(t(log(countdata))-log(TSS))
y.tss=y.tss+abs(min(y.tss))
dist.tss=vegdist(t(y.tss), method="bray", na.rm = T)
fit.tss=isoMDS(dist.tss, k=2)
mds.xy.tss=data.frame(method = "TSS", fit.tss$points, country = meta.data$country)
ss_compute=function(x){
x=as.matrix(x)
ss=sum(t(t(x)-colMeans(x, na.rm = T))^2, na.rm = T)
return(ss)
}
mds.xy.ancom.bc=mds.xy.ancom.bc%>%mutate(scale_x1=scale(X1), scale_x2=scale(X2))
mds.xy.css=mds.xy.css%>%mutate(scale_x1=scale(X1), scale_x2=scale(X2))
mds.xy.med=mds.xy.med%>%mutate(scale_x1=scale(X1), scale_x2=scale(X2))
mds.xy.uq=mds.xy.uq%>%mutate(scale_x1=scale(X1), scale_x2=scale(X2))
mds.xy.tmm=mds.xy.tmm%>%mutate(scale_x1=scale(X1), scale_x2=scale(X2))
mds.xy.tss=mds.xy.tss%>%mutate(scale_x1=scale(X1), scale_x2=scale(X2))
mds.list=list(mds.xy.ancom.bc, mds.xy.css, mds.xy.med, mds.xy.uq, mds.xy.tmm, mds.xy.tss)
ssb.df=data.frame(method=c("ANCOM-BC", "CSS", "MED", "UQ", "TMM", "TSS"), ssb = NA)
for (i in 1:length(mds.list)) {
method=mds.list[[i]]
sst=ss_compute(method%>%dplyr::select(scale_x1, scale_x2))
ssw=ss_compute(method%>%filter(country=="MA")%>%dplyr::select(scale_x1, scale_x2))+
ss_compute(method%>%filter(country=="VEN")%>%dplyr::select(scale_x1, scale_x2))
ssb=sst-ssw
ssb.df[i, "ssb"]=ssb
}
txt.df = data.frame(X1=0.2, X2=0.25, ssb.df)
txt.df$ssb = paste0("SSB = ", round(txt.df$ssb, 0))
p.df = rbind(mds.xy.ancom.bc, mds.xy.css, mds.xy.med, mds.xy.uq, mds.xy.tmm, mds.xy.tss)
p=ggplot(p.df, aes(X1, X2, color = country)) + geom_point(size = 0.3) +
facet_wrap(.~method, nrow = 2)+scale_y_continuous(limits = c(-0.3, 0.3))+
labs(x="First NMDS coordinate", y="Second NMDS coordinate")+
scale_color_discrete(name="", breaks=c("MA", "VEN"), labels = c("Malawi", "Venezuela"))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
strip.background = element_rect(fill="white"))+
guides(color = guide_legend(override.aes = list(size=3)))+
geom_text(data = txt.df, mapping = aes(x = X1, y = X2, label = ssb, color = NULL,group= NULL))
p
